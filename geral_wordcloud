<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8" />
<style>body{background-color:white;}</style>
<script>(function() {
  // If window.HTMLWidgets is already defined, then use it; otherwise create a
  // new object. This allows preceding code to set options that affect the
  // initialization process (though none currently exist).
  window.HTMLWidgets = window.HTMLWidgets || {};

  // See if we're running in a viewer pane. If not, we're in a web browser.
  var viewerMode = window.HTMLWidgets.viewerMode =
      /\bviewer_pane=1\b/.test(window.location);

  // See if we're running in Shiny mode. If not, it's a static document.
  // Note that static widgets can appear in both Shiny and static modes, but
  // obviously, Shiny widgets can only appear in Shiny apps/documents.
  var shinyMode = window.HTMLWidgets.shinyMode =
      typeof(window.Shiny) !== "undefined" && !!window.Shiny.outputBindings;

  // We can't count on jQuery being available, so we implement our own
  // version if necessary.
  function querySelectorAll(scope, selector) {
    if (typeof(jQuery) !== "undefined" && scope instanceof jQuery) {
      return scope.find(selector);
    }
    if (scope.querySelectorAll) {
      return scope.querySelectorAll(selector);
    }
  }

  function asArray(value) {
    if (value === null)
      return [];
    if ($.isArray(value))
      return value;
    return [value];
  }

  // Implement jQuery's extend
  function extend(target /*, ... */) {
    if (arguments.length == 1) {
      return target;
    }
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var prop in source) {
        if (source.hasOwnProperty(prop)) {
          target[prop] = source[prop];
        }
      }
    }
    return target;
  }

  // IE8 doesn't support Array.forEach.
  function forEach(values, callback, thisArg) {
    if (values.forEach) {
      values.forEach(callback, thisArg);
    } else {
      for (var i = 0; i < values.length; i++) {
        callback.call(thisArg, values[i], i, values);
      }
    }
  }

  // Replaces the specified method with the return value of funcSource.
  //
  // Note that funcSource should not BE the new method, it should be a function
  // that RETURNS the new method. funcSource receives a single argument that is
  // the overridden method, it can be called from the new method. The overridden
  // method can be called like a regular function, it has the target permanently
  // bound to it so "this" will work correctly.
  function overrideMethod(target, methodName, funcSource) {
    var superFunc = target[methodName] || function() {};
    var superFuncBound = function() {
      return superFunc.apply(target, arguments);
    };
    target[methodName] = funcSource(superFuncBound);
  }

  // Add a method to delegator that, when invoked, calls
  // delegatee.methodName. If there is no such method on
  // the delegatee, but there was one on delegator before
  // delegateMethod was called, then the original version
  // is invoked instead.
  // For example:
  //
  // var a = {
  //   method1: function() { console.log('a1'); }
  //   method2: function() { console.log('a2'); }
  // };
  // var b = {
  //   method1: function() { console.log('b1'); }
  // };
  // delegateMethod(a, b, "method1");
  // delegateMethod(a, b, "method2");
  // a.method1();
  // a.method2();
  //
  // The output would be "b1", "a2".
  function delegateMethod(delegator, delegatee, methodName) {
    var inherited = delegator[methodName];
    delegator[methodName] = function() {
      var target = delegatee;
      var method = delegatee[methodName];

      // The method doesn't exist on the delegatee. Instead,
      // call the method on the delegator, if it exists.
      if (!method) {
        target = delegator;
        method = inherited;
      }

      if (method) {
        return method.apply(target, arguments);
      }
    };
  }

  // Implement a vague facsimilie of jQuery's data method
  function elementData(el, name, value) {
    if (arguments.length == 2) {
      return el["htmlwidget_data_" + name];
    } else if (arguments.length == 3) {
      el["htmlwidget_data_" + name] = value;
      return el;
    } else {
      throw new Error("Wrong number of arguments for elementData: " +
        arguments.length);
    }
  }

  // http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex
  function escapeRegExp(str) {
    return str.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
  }

  function hasClass(el, className) {
    var re = new RegExp("\\b" + escapeRegExp(className) + "\\b");
    return re.test(el.className);
  }

  // elements - array (or array-like object) of HTML elements
  // className - class name to test for
  // include - if true, only return elements with given className;
  //   if false, only return elements *without* given className
  function filterByClass(elements, className, include) {
    var results = [];
    for (var i = 0; i < elements.length; i++) {
      if (hasClass(elements[i], className) == include)
        results.push(elements[i]);
    }
    return results;
  }

  function on(obj, eventName, func) {
    if (obj.addEventListener) {
      obj.addEventListener(eventName, func, false);
    } else if (obj.attachEvent) {
      obj.attachEvent(eventName, func);
    }
  }

  function off(obj, eventName, func) {
    if (obj.removeEventListener)
      obj.removeEventListener(eventName, func, false);
    else if (obj.detachEvent) {
      obj.detachEvent(eventName, func);
    }
  }

  // Translate array of values to top/right/bottom/left, as usual with
  // the "padding" CSS property
  // https://developer.mozilla.org/en-US/docs/Web/CSS/padding
  function unpackPadding(value) {
    if (typeof(value) === "number")
      value = [value];
    if (value.length === 1) {
      return {top: value[0], right: value[0], bottom: value[0], left: value[0]};
    }
    if (value.length === 2) {
      return {top: value[0], right: value[1], bottom: value[0], left: value[1]};
    }
    if (value.length === 3) {
      return {top: value[0], right: value[1], bottom: value[2], left: value[1]};
    }
    if (value.length === 4) {
      return {top: value[0], right: value[1], bottom: value[2], left: value[3]};
    }
  }

  // Convert an unpacked padding object to a CSS value
  function paddingToCss(paddingObj) {
    return paddingObj.top + "px " + paddingObj.right + "px " + paddingObj.bottom + "px " + paddingObj.left + "px";
  }

  // Makes a number suitable for CSS
  function px(x) {
    if (typeof(x) === "number")
      return x + "px";
    else
      return x;
  }

  // Retrieves runtime widget sizing information for an element.
  // The return value is either null, or an object with fill, padding,
  // defaultWidth, defaultHeight fields.
  function sizingPolicy(el) {
    var sizingEl = document.querySelector("script[data-for='" + el.id + "'][type='application/htmlwidget-sizing']");
    if (!sizingEl)
      return null;
    var sp = JSON.parse(sizingEl.textContent || sizingEl.text || "{}");
    if (viewerMode) {
      return sp.viewer;
    } else {
      return sp.browser;
    }
  }

  // @param tasks Array of strings (or falsy value, in which case no-op).
  //   Each element must be a valid JavaScript expression that yields a
  //   function. Or, can be an array of objects with "code" and "data"
  //   properties; in this case, the "code" property should be a string
  //   of JS that's an expr that yields a function, and "data" should be
  //   an object that will be added as an additional argument when that
  //   function is called.
  // @param target The object that will be "this" for each function
  //   execution.
  // @param args Array of arguments to be passed to the functions. (The
  //   same arguments will be passed to all functions.)
  function evalAndRun(tasks, target, args) {
    if (tasks) {
      forEach(tasks, function(task) {
        var theseArgs = args;
        if (typeof(task) === "object") {
          theseArgs = theseArgs.concat([task.data]);
          task = task.code;
        }
        var taskFunc = tryEval(task);
        if (typeof(taskFunc) !== "function") {
          throw new Error("Task must be a function! Source:\n" + task);
        }
        taskFunc.apply(target, theseArgs);
      });
    }
  }

  // Attempt eval() both with and without enclosing in parentheses.
  // Note that enclosing coerces a function declaration into
  // an expression that eval() can parse
  // (otherwise, a SyntaxError is thrown)
  function tryEval(code) {
    var result = null;
    try {
      result = eval(code);
    } catch(error) {
      if (!error instanceof SyntaxError) {
        throw error;
      }
      try {
        result = eval("(" + code + ")");
      } catch(e) {
        if (e instanceof SyntaxError) {
          throw error;
        } else {
          throw e;
        }
      }
    }
    return result;
  }

  function initSizing(el) {
    var sizing = sizingPolicy(el);
    if (!sizing)
      return;

    var cel = document.getElementById("htmlwidget_container");
    if (!cel)
      return;

    if (typeof(sizing.padding) !== "undefined") {
      document.body.style.margin = "0";
      document.body.style.padding = paddingToCss(unpackPadding(sizing.padding));
    }

    if (sizing.fill) {
      document.body.style.overflow = "hidden";
      document.body.style.width = "100%";
      document.body.style.height = "100%";
      document.documentElement.style.width = "100%";
      document.documentElement.style.height = "100%";
      if (cel) {
        cel.style.position = "absolute";
        var pad = unpackPadding(sizing.padding);
        cel.style.top = pad.top + "px";
        cel.style.right = pad.right + "px";
        cel.style.bottom = pad.bottom + "px";
        cel.style.left = pad.left + "px";
        el.style.width = "100%";
        el.style.height = "100%";
      }

      return {
        getWidth: function() { return cel.offsetWidth; },
        getHeight: function() { return cel.offsetHeight; }
      };

    } else {
      el.style.width = px(sizing.width);
      el.style.height = px(sizing.height);

      return {
        getWidth: function() { return el.offsetWidth; },
        getHeight: function() { return el.offsetHeight; }
      };
    }
  }

  // Default implementations for methods
  var defaults = {
    find: function(scope) {
      return querySelectorAll(scope, "." + this.name);
    },
    renderError: function(el, err) {
      var $el = $(el);

      this.clearError(el);

      // Add all these error classes, as Shiny does
      var errClass = "shiny-output-error";
      if (err.type !== null) {
        // use the classes of the error condition as CSS class names
        errClass = errClass + " " + $.map(asArray(err.type), function(type) {
          return errClass + "-" + type;
        }).join(" ");
      }
      errClass = errClass + " htmlwidgets-error";

      // Is el inline or block? If inline or inline-block, just display:none it
      // and add an inline error.
      var display = $el.css("display");
      $el.data("restore-display-mode", display);

      if (display === "inline" || display === "inline-block") {
        $el.hide();
        if (err.message !== "") {
          var errorSpan = $("<span>").addClass(errClass);
          errorSpan.text(err.message);
          $el.after(errorSpan);
        }
      } else if (display === "block") {
        // If block, add an error just after the el, set visibility:none on the
        // el, and position the error to be on top of the el.
        // Mark it with a unique ID and CSS class so we can remove it later.
        $el.css("visibility", "hidden");
        if (err.message !== "") {
          var errorDiv = $("<div>").addClass(errClass).css("position", "absolute")
            .css("top", el.offsetTop)
            .css("left", el.offsetLeft)
            // setting width can push out the page size, forcing otherwise
            // unnecessary scrollbars to appear and making it impossible for
            // the element to shrink; so use max-width instead
            .css("maxWidth", el.offsetWidth)
            .css("height", el.offsetHeight);
          errorDiv.text(err.message);
          $el.after(errorDiv);

          // Really dumb way to keep the size/position of the error in sync with
          // the parent element as the window is resized or whatever.
          var intId = setInterval(function() {
            if (!errorDiv[0].parentElement) {
              clearInterval(intId);
              return;
            }
            errorDiv
              .css("top", el.offsetTop)
              .css("left", el.offsetLeft)
              .css("maxWidth", el.offsetWidth)
              .css("height", el.offsetHeight);
          }, 500);
        }
      }
    },
    clearError: function(el) {
      var $el = $(el);
      var display = $el.data("restore-display-mode");
      $el.data("restore-display-mode", null);

      if (display === "inline" || display === "inline-block") {
        if (display)
          $el.css("display", display);
        $(el.nextSibling).filter(".htmlwidgets-error").remove();
      } else if (display === "block"){
        $el.css("visibility", "inherit");
        $(el.nextSibling).filter(".htmlwidgets-error").remove();
      }
    },
    sizing: {}
  };

  // Called by widget bindings to register a new type of widget. The definition
  // object can contain the following properties:
  // - name (required) - A string indicating the binding name, which will be
  //   used by default as the CSS classname to look for.
  // - initialize (optional) - A function(el) that will be called once per
  //   widget element; if a value is returned, it will be passed as the third
  //   value to renderValue.
  // - renderValue (required) - A function(el, data, initValue) that will be
  //   called with data. Static contexts will cause this to be called once per
  //   element; Shiny apps will cause this to be called multiple times per
  //   element, as the data changes.
  window.HTMLWidgets.widget = function(definition) {
    if (!definition.name) {
      throw new Error("Widget must have a name");
    }
    if (!definition.type) {
      throw new Error("Widget must have a type");
    }
    // Currently we only support output widgets
    if (definition.type !== "output") {
      throw new Error("Unrecognized widget type '" + definition.type + "'");
    }
    // TODO: Verify that .name is a valid CSS classname

    // Support new-style instance-bound definitions. Old-style class-bound
    // definitions have one widget "object" per widget per type/class of
    // widget; the renderValue and resize methods on such widget objects
    // take el and instance arguments, because the widget object can't
    // store them. New-style instance-bound definitions have one widget
    // object per widget instance; the definition that's passed in doesn't
    // provide renderValue or resize methods at all, just the single method
    //   factory(el, width, height)
    // which returns an object that has renderValue(x) and resize(w, h).
    // This enables a far more natural programming style for the widget
    // author, who can store per-instance state using either OO-style
    // instance fields or functional-style closure variables (I guess this
    // is in contrast to what can only be called C-style pseudo-OO which is
    // what we required before).
    if (definition.factory) {
      definition = createLegacyDefinitionAdapter(definition);
    }

    if (!definition.renderValue) {
      throw new Error("Widget must have a renderValue function");
    }

    // For static rendering (non-Shiny), use a simple widget registration
    // scheme. We also use this scheme for Shiny apps/documents that also
    // contain static widgets.
    window.HTMLWidgets.widgets = window.HTMLWidgets.widgets || [];
    // Merge defaults into the definition; don't mutate the original definition.
    var staticBinding = extend({}, defaults, definition);
    overrideMethod(staticBinding, "find", function(superfunc) {
      return function(scope) {
        var results = superfunc(scope);
        // Filter out Shiny outputs, we only want the static kind
        return filterByClass(results, "html-widget-output", false);
      };
    });
    window.HTMLWidgets.widgets.push(staticBinding);

    if (shinyMode) {
      // Shiny is running. Register the definition with an output binding.
      // The definition itself will not be the output binding, instead
      // we will make an output binding object that delegates to the
      // definition. This is because we foolishly used the same method
      // name (renderValue) for htmlwidgets definition and Shiny bindings
      // but they actually have quite different semantics (the Shiny
      // bindings receive data that includes lots of metadata that it
      // strips off before calling htmlwidgets renderValue). We can't
      // just ignore the difference because in some widgets it's helpful
      // to call this.renderValue() from inside of resize(), and if
      // we're not delegating, then that call will go to the Shiny
      // version instead of the htmlwidgets version.

      // Merge defaults with definition, without mutating either.
      var bindingDef = extend({}, defaults, definition);

      // This object will be our actual Shiny binding.
      var shinyBinding = new Shiny.OutputBinding();

      // With a few exceptions, we'll want to simply use the bindingDef's
      // version of methods if they are available, otherwise fall back to
      // Shiny's defaults. NOTE: If Shiny's output bindings gain additional
      // methods in the future, and we want them to be overrideable by
      // HTMLWidget binding definitions, then we'll need to add them to this
      // list.
      delegateMethod(shinyBinding, bindingDef, "getId");
      delegateMethod(shinyBinding, bindingDef, "onValueChange");
      delegateMethod(shinyBinding, bindingDef, "onValueError");
      delegateMethod(shinyBinding, bindingDef, "renderError");
      delegateMethod(shinyBinding, bindingDef, "clearError");
      delegateMethod(shinyBinding, bindingDef, "showProgress");

      // The find, renderValue, and resize are handled differently, because we
      // want to actually decorate the behavior of the bindingDef methods.

      shinyBinding.find = function(scope) {
        var results = bindingDef.find(scope);

        // Only return elements that are Shiny outputs, not static ones
        var dynamicResults = results.filter(".html-widget-output");

        // It's possible that whatever caused Shiny to think there might be
        // new dynamic outputs, also caused there to be new static outputs.
        // Since there might be lots of different htmlwidgets bindings, we
        // schedule execution for later--no need to staticRender multiple
        // times.
        if (results.length !== dynamicResults.length)
          scheduleStaticRender();

        return dynamicResults;
      };

      // Wrap renderValue to handle initialization, which unfortunately isn't
      // supported natively by Shiny at the time of this writing.

      shinyBinding.renderValue = function(el, data) {
        Shiny.renderDependencies(data.deps);
        // Resolve strings marked as javascript literals to objects
        if (!(data.evals instanceof Array)) data.evals = [data.evals];
        for (var i = 0; data.evals && i < data.evals.length; i++) {
          window.HTMLWidgets.evaluateStringMember(data.x, data.evals[i]);
        }
        if (!bindingDef.renderOnNullValue) {
          if (data.x === null) {
            el.style.visibility = "hidden";
            return;
          } else {
            el.style.visibility = "inherit";
          }
        }
        if (!elementData(el, "initialized")) {
          initSizing(el);

          elementData(el, "initialized", true);
          if (bindingDef.initialize) {
            var result = bindingDef.initialize(el, el.offsetWidth,
              el.offsetHeight);
            elementData(el, "init_result", result);
          }
        }
        bindingDef.renderValue(el, data.x, elementData(el, "init_result"));
        evalAndRun(data.jsHooks.render, elementData(el, "init_result"), [el, data.x]);
      };

      // Only override resize if bindingDef implements it
      if (bindingDef.resize) {
        shinyBinding.resize = function(el, width, height) {
          // Shiny can call resize before initialize/renderValue have been
          // called, which doesn't make sense for widgets.
          if (elementData(el, "initialized")) {
            bindingDef.resize(el, width, height, elementData(el, "init_result"));
          }
        };
      }

      Shiny.outputBindings.register(shinyBinding, bindingDef.name);
    }
  };

  var scheduleStaticRenderTimerId = null;
  function scheduleStaticRender() {
    if (!scheduleStaticRenderTimerId) {
      scheduleStaticRenderTimerId = setTimeout(function() {
        scheduleStaticRenderTimerId = null;
        window.HTMLWidgets.staticRender();
      }, 1);
    }
  }

  // Render static widgets after the document finishes loading
  // Statically render all elements that are of this widget's class
  window.HTMLWidgets.staticRender = function() {
    var bindings = window.HTMLWidgets.widgets || [];
    forEach(bindings, function(binding) {
      var matches = binding.find(document.documentElement);
      forEach(matches, function(el) {
        var sizeObj = initSizing(el, binding);

        if (hasClass(el, "html-widget-static-bound"))
          return;
        el.className = el.className + " html-widget-static-bound";

        var initResult;
        if (binding.initialize) {
          initResult = binding.initialize(el,
            sizeObj ? sizeObj.getWidth() : el.offsetWidth,
            sizeObj ? sizeObj.getHeight() : el.offsetHeight
          );
          elementData(el, "init_result", initResult);
        }

        if (binding.resize) {
          var lastSize = {
            w: sizeObj ? sizeObj.getWidth() : el.offsetWidth,
            h: sizeObj ? sizeObj.getHeight() : el.offsetHeight
          };
          var resizeHandler = function(e) {
            var size = {
              w: sizeObj ? sizeObj.getWidth() : el.offsetWidth,
              h: sizeObj ? sizeObj.getHeight() : el.offsetHeight
            };
            if (size.w === 0 && size.h === 0)
              return;
            if (size.w === lastSize.w && size.h === lastSize.h)
              return;
            lastSize = size;
            binding.resize(el, size.w, size.h, initResult);
          };

          on(window, "resize", resizeHandler);

          // This is needed for cases where we're running in a Shiny
          // app, but the widget itself is not a Shiny output, but
          // rather a simple static widget. One example of this is
          // an rmarkdown document that has runtime:shiny and widget
          // that isn't in a render function. Shiny only knows to
          // call resize handlers for Shiny outputs, not for static
          // widgets, so we do it ourselves.
          if (window.jQuery) {
            window.jQuery(document).on(
              "shown.htmlwidgets shown.bs.tab.htmlwidgets shown.bs.collapse.htmlwidgets",
              resizeHandler
            );
            window.jQuery(document).on(
              "hidden.htmlwidgets hidden.bs.tab.htmlwidgets hidden.bs.collapse.htmlwidgets",
              resizeHandler
            );
          }

          // This is needed for the specific case of ioslides, which
          // flips slides between display:none and display:block.
          // Ideally we would not have to have ioslide-specific code
          // here, but rather have ioslides raise a generic event,
          // but the rmarkdown package just went to CRAN so the
          // window to getting that fixed may be long.
          if (window.addEventListener) {
            // It's OK to limit this to window.addEventListener
            // browsers because ioslides itself only supports
            // such browsers.
            on(document, "slideenter", resizeHandler);
            on(document, "slideleave", resizeHandler);
          }
        }

        var scriptData = document.querySelector("script[data-for='" + el.id + "'][type='application/json']");
        if (scriptData) {
          var data = JSON.parse(scriptData.textContent || scriptData.text);
          // Resolve strings marked as javascript literals to objects
          if (!(data.evals instanceof Array)) data.evals = [data.evals];
          for (var k = 0; data.evals && k < data.evals.length; k++) {
            window.HTMLWidgets.evaluateStringMember(data.x, data.evals[k]);
          }
          binding.renderValue(el, data.x, initResult);
          evalAndRun(data.jsHooks.render, initResult, [el, data.x]);
        }
      });
    });

    invokePostRenderHandlers();
  }


  function has_jQuery3() {
    if (!window.jQuery) {
      return false;
    }
    var $version = window.jQuery.fn.jquery;
    var $major_version = parseInt($version.split(".")[0]);
    return $major_version >= 3;
  }

  /*
  / Shiny 1.4 bumped jQuery from 1.x to 3.x which means jQuery's
  / on-ready handler (i.e., $(fn)) is now asyncronous (i.e., it now
  / really means $(setTimeout(fn)).
  / https://jquery.com/upgrade-guide/3.0/#breaking-change-document-ready-handlers-are-now-asynchronous
  /
  / Since Shiny uses $() to schedule initShiny, shiny>=1.4 calls initShiny
  / one tick later than it did before, which means staticRender() is
  / called renderValue() earlier than (advanced) widget authors might be expecting.
  / https://github.com/rstudio/shiny/issues/2630
  /
  / For a concrete example, leaflet has some methods (e.g., updateBounds)
  / which reference Shiny methods registered in initShiny (e.g., setInputValue).
  / Since leaflet is privy to this life-cycle, it knows to use setTimeout() to
  / delay execution of those methods (until Shiny methods are ready)
  / https://github.com/rstudio/leaflet/blob/18ec981/javascript/src/index.js#L266-L268
  /
  / Ideally widget authors wouldn't need to use this setTimeout() hack that
  / leaflet uses to call Shiny methods on a staticRender(). In the long run,
  / the logic initShiny should be broken up so that method registration happens
  / right away, but binding happens later.
  */
  function maybeStaticRenderLater() {
    if (shinyMode && has_jQuery3()) {
      window.jQuery(window.HTMLWidgets.staticRender);
    } else {
      window.HTMLWidgets.staticRender();
    }
  }

  if (document.addEventListener) {
    document.addEventListener("DOMContentLoaded", function() {
      document.removeEventListener("DOMContentLoaded", arguments.callee, false);
      maybeStaticRenderLater();
    }, false);
  } else if (document.attachEvent) {
    document.attachEvent("onreadystatechange", function() {
      if (document.readyState === "complete") {
        document.detachEvent("onreadystatechange", arguments.callee);
        maybeStaticRenderLater();
      }
    });
  }


  window.HTMLWidgets.getAttachmentUrl = function(depname, key) {
    // If no key, default to the first item
    if (typeof(key) === "undefined")
      key = 1;

    var link = document.getElementById(depname + "-" + key + "-attachment");
    if (!link) {
      throw new Error("Attachment " + depname + "/" + key + " not found in document");
    }
    return link.getAttribute("href");
  };

  window.HTMLWidgets.dataframeToD3 = function(df) {
    var names = [];
    var length;
    for (var name in df) {
        if (df.hasOwnProperty(name))
            names.push(name);
        if (typeof(df[name]) !== "object" || typeof(df[name].length) === "undefined") {
            throw new Error("All fields must be arrays");
        } else if (typeof(length) !== "undefined" && length !== df[name].length) {
            throw new Error("All fields must be arrays of the same length");
        }
        length = df[name].length;
    }
    var results = [];
    var item;
    for (var row = 0; row < length; row++) {
        item = {};
        for (var col = 0; col < names.length; col++) {
            item[names[col]] = df[names[col]][row];
        }
        results.push(item);
    }
    return results;
  };

  window.HTMLWidgets.transposeArray2D = function(array) {
      if (array.length === 0) return array;
      var newArray = array[0].map(function(col, i) {
          return array.map(function(row) {
              return row[i]
          })
      });
      return newArray;
  };
  // Split value at splitChar, but allow splitChar to be escaped
  // using escapeChar. Any other characters escaped by escapeChar
  // will be included as usual (including escapeChar itself).
  function splitWithEscape(value, splitChar, escapeChar) {
    var results = [];
    var escapeMode = false;
    var currentResult = "";
    for (var pos = 0; pos < value.length; pos++) {
      if (!escapeMode) {
        if (value[pos] === splitChar) {
          results.push(currentResult);
          currentResult = "";
        } else if (value[pos] === escapeChar) {
          escapeMode = true;
        } else {
          currentResult += value[pos];
        }
      } else {
        currentResult += value[pos];
        escapeMode = false;
      }
    }
    if (currentResult !== "") {
      results.push(currentResult);
    }
    return results;
  }
  // Function authored by Yihui/JJ Allaire
  window.HTMLWidgets.evaluateStringMember = function(o, member) {
    var parts = splitWithEscape(member, '.', '\\');
    for (var i = 0, l = parts.length; i < l; i++) {
      var part = parts[i];
      // part may be a character or 'numeric' member name
      if (o !== null && typeof o === "object" && part in o) {
        if (i == (l - 1)) { // if we are at the end of the line then evalulate
          if (typeof o[part] === "string")
            o[part] = tryEval(o[part]);
        } else { // otherwise continue to next embedded object
          o = o[part];
        }
      }
    }
  };

  // Retrieve the HTMLWidget instance (i.e. the return value of an
  // HTMLWidget binding's initialize() or factory() function)
  // associated with an element, or null if none.
  window.HTMLWidgets.getInstance = function(el) {
    return elementData(el, "init_result");
  };

  // Finds the first element in the scope that matches the selector,
  // and returns the HTMLWidget instance (i.e. the return value of
  // an HTMLWidget binding's initialize() or factory() function)
  // associated with that element, if any. If no element matches the
  // selector, or the first matching element has no HTMLWidget
  // instance associated with it, then null is returned.
  //
  // The scope argument is optional, and defaults to window.document.
  window.HTMLWidgets.find = function(scope, selector) {
    if (arguments.length == 1) {
      selector = scope;
      scope = document;
    }

    var el = scope.querySelector(selector);
    if (el === null) {
      return null;
    } else {
      return window.HTMLWidgets.getInstance(el);
    }
  };

  // Finds all elements in the scope that match the selector, and
  // returns the HTMLWidget instances (i.e. the return values of
  // an HTMLWidget binding's initialize() or factory() function)
  // associated with the elements, in an array. If elements that
  // match the selector don't have an associated HTMLWidget
  // instance, the returned array will contain nulls.
  //
  // The scope argument is optional, and defaults to window.document.
  window.HTMLWidgets.findAll = function(scope, selector) {
    if (arguments.length == 1) {
      selector = scope;
      scope = document;
    }

    var nodes = scope.querySelectorAll(selector);
    var results = [];
    for (var i = 0; i < nodes.length; i++) {
      results.push(window.HTMLWidgets.getInstance(nodes[i]));
    }
    return results;
  };

  var postRenderHandlers = [];
  function invokePostRenderHandlers() {
    while (postRenderHandlers.length) {
      var handler = postRenderHandlers.shift();
      if (handler) {
        handler();
      }
    }
  }

  // Register the given callback function to be invoked after the
  // next time static widgets are rendered.
  window.HTMLWidgets.addPostRenderHandler = function(callback) {
    postRenderHandlers.push(callback);
  };

  // Takes a new-style instance-bound definition, and returns an
  // old-style class-bound definition. This saves us from having
  // to rewrite all the logic in this file to accomodate both
  // types of definitions.
  function createLegacyDefinitionAdapter(defn) {
    var result = {
      name: defn.name,
      type: defn.type,
      initialize: function(el, width, height) {
        return defn.factory(el, width, height);
      },
      renderValue: function(el, x, instance) {
        return instance.renderValue(x);
      },
      resize: function(el, width, height, instance) {
        return instance.resize(width, height);
      }
    };

    if (defn.find)
      result.find = defn.find;
    if (defn.renderError)
      result.renderError = defn.renderError;
    if (defn.clearError)
      result.clearError = defn.clearError;

    return result;
  }
})();

</script>
<style type="text/css">#wcLabel {position: absolute;border: 2px solid #fff;box-shadow: 0 0 4px 0 #008;padding: 2px;pointer-events: none; }#wcSpan {position: absolute;top: 100%;left: 0;background-color: rgba(255, 255, 255, 0.8);color: #333;margin-top: 6px;padding: 0 0.5em;border-radius: 0.5em;white-space: nowrap; }</style>
<script>/*!
 * wordcloud2.js
 * http://timdream.org/wordcloud2.js/
 *
 * Copyright 2011 - 2013 Tim Chien
 * Released under the MIT license
 */

'use strict';

// setImmediate
if (!window.setImmediate) {
  window.setImmediate = (function setupSetImmediate() {
    return window.msSetImmediate ||
    window.webkitSetImmediate ||
    window.mozSetImmediate ||
    window.oSetImmediate ||
    (function setupSetZeroTimeout() {
      if (!window.postMessage || !window.addEventListener) {
        return null;
      }

      var callbacks = [undefined];
      var message = 'zero-timeout-message';

      // Like setTimeout, but only takes a function argument.  There's
      // no time argument (always zero) and no arguments (you have to
      // use a closure).
      var setZeroTimeout = function setZeroTimeout(callback) {
        var id = callbacks.length;
        callbacks.push(callback);
        window.postMessage(message + id.toString(36), '*');

        return id;
      };

      window.addEventListener('message', function setZeroTimeoutMessage(evt) {
        // Skipping checking event source, retarded IE confused this window
        // object with another in the presence of iframe
        if (typeof evt.data !== 'string' ||
            evt.data.substr(0, message.length) !== message/* ||
            evt.source !== window */) {
          return;
        }

        evt.stopImmediatePropagation();

        var id = parseInt(evt.data.substr(message.length), 36);
        if (!callbacks[id]) {
          return;
        }

        callbacks[id]();
        callbacks[id] = undefined;
      }, true);

      /* specify clearImmediate() here since we need the scope */
      window.clearImmediate = function clearZeroTimeout(id) {
        if (!callbacks[id]) {
          return;
        }

        callbacks[id] = undefined;
      };

      return setZeroTimeout;
    })() ||
    // fallback
    function setImmediateFallback(fn) {
      window.setTimeout(fn, 0);
    };
  })();
}

if (!window.clearImmediate) {
  window.clearImmediate = (function setupClearImmediate() {
    return window.msClearImmediate ||
    window.webkitClearImmediate ||
    window.mozClearImmediate ||
    window.oClearImmediate ||
    // "clearZeroTimeout" is implement on the previous block ||
    // fallback
    function clearImmediateFallback(timer) {
      window.clearTimeout(timer);
    };
  })();
}

(function(global) {

  // Check if WordCloud can run on this browser
  var isSupported = (function isSupported() {
    var canvas = document.createElement('canvas');
    if (!canvas || !canvas.getContext) {
      return false;
    }

    var ctx = canvas.getContext('2d');
    if (!ctx.getImageData) {
      return false;
    }
    if (!ctx.fillText) {
      return false;
    }

    if (!Array.prototype.some) {
      return false;
    }
    if (!Array.prototype.push) {
      return false;
    }

    return true;
  }());

  // Find out if the browser impose minium font size by
  // drawing small texts on a canvas and measure it's width.
  var minFontSize = (function getMinFontSize() {
    if (!isSupported) {
      return;
    }

    var ctx = document.createElement('canvas').getContext('2d');

    // start from 20
    var size = 20;

    // two sizes to measure
    var hanWidth, mWidth;

    while (size) {
      ctx.font = size.toString(10) + 'px sans-serif';
      if ((ctx.measureText('\uFF37').width === hanWidth) &&
          (ctx.measureText('m').width) === mWidth) {
        return (size + 1);
      }

      hanWidth = ctx.measureText('\uFF37').width;
      mWidth = ctx.measureText('m').width;

      size--;
    }

    return 0;
  })();

  // Based on http://jsfromhell.com/array/shuffle
  var shuffleArray = function shuffleArray(arr) {
    for (var j, x, i = arr.length; i;
      j = Math.floor(Math.random() * i),
      x = arr[--i], arr[i] = arr[j],
      arr[j] = x) {}
    return arr;
  };

  var WordCloud = function WordCloud(elements, options) {
    if (!isSupported) {
      return;
    }

    if (!Array.isArray(elements)) {
      elements = [elements];
    }

    elements.forEach(function(el, i) {
      if (typeof el === 'string') {
        elements[i] = document.getElementById(el);
        if (!elements[i]) {
          throw 'The element id specified is not found.';
        }
      } else if (!el.tagName && !el.appendChild) {
        throw 'You must pass valid HTML elements, or ID of the element.';
      }
    });

    /* Default values to be overwritten by options object */
    var settings = {
      list: [],
      fontFamily: '"Trebuchet MS", "Heiti TC", "微軟正黑體", ' +
                  '"Arial Unicode MS", "Droid Fallback Sans", sans-serif',
      fontWeight: 'normal',
      color: 'random-dark',
      minSize: 0, // 0 to disable
      weightFactor: 1,
      clearCanvas: true,
      backgroundColor: '#fff',  // opaque white = rgba(255, 255, 255, 1)

      gridSize: 8,
      origin: null,

      drawMask: false,
      maskColor: 'rgba(255,0,0,0.3)',
      maskGapWidth: 0.3,

      wait: 0,
      abortThreshold: 0, // disabled
      abort: function noop() {},

      minRotation: - Math.PI / 2,
      maxRotation: Math.PI / 2,

      shuffle: true,
      rotateRatio: 0.1,

      shape: 'circle',
      ellipticity: 0.65,

      classes: null,

      hover: null,
      click: null
    };

    if (options) {
      for (var key in options) {
        if (key in settings) {
          settings[key] = options[key];
        }
      }
    }

    /* Convert weightFactor into a function */
    if (typeof settings.weightFactor !== 'function') {
      var factor = settings.weightFactor;
      settings.weightFactor = function weightFactor(pt) {
        return pt * factor; //in px
      };
    }

    /* Convert shape into a function */
    if (typeof settings.shape !== 'function') {
      switch (settings.shape) {
        case 'circle':
        /* falls through */
        default:
          // 'circle' is the default and a shortcut in the code loop.
          settings.shape = 'circle';
          break;

        case 'cardioid':
          settings.shape = function shapeCardioid(theta) {
            return 1 - Math.sin(theta);
          };
          break;

        /*

        To work out an X-gon, one has to calculate "m",
        where 1/(cos(2*PI/X)+m*sin(2*PI/X)) = 1/(cos(0)+m*sin(0))
        http://www.wolframalpha.com/input/?i=1%2F%28cos%282*PI%2FX%29%2Bm*sin%28
        2*PI%2FX%29%29+%3D+1%2F%28cos%280%29%2Bm*sin%280%29%29

        Copy the solution into polar equation r = 1/(cos(t') + m*sin(t'))
        where t' equals to mod(t, 2PI/X);

        */

        case 'diamond':
        case 'square':
          // http://www.wolframalpha.com/input/?i=plot+r+%3D+1%2F%28cos%28mod+
          // %28t%2C+PI%2F2%29%29%2Bsin%28mod+%28t%2C+PI%2F2%29%29%29%2C+t+%3D
          // +0+..+2*PI
          settings.shape = function shapeSquare(theta) {
            var thetaPrime = theta % (2 * Math.PI / 4);
            return 1 / (Math.cos(thetaPrime) + Math.sin(thetaPrime));
          };
          break;

        case 'triangle-forward':
          // http://www.wolframalpha.com/input/?i=plot+r+%3D+1%2F%28cos%28mod+
          // %28t%2C+2*PI%2F3%29%29%2Bsqrt%283%29sin%28mod+%28t%2C+2*PI%2F3%29
          // %29%29%2C+t+%3D+0+..+2*PI
          settings.shape = function shapeTriangle(theta) {
            var thetaPrime = theta % (2 * Math.PI / 3);
            return 1 / (Math.cos(thetaPrime) +
                        Math.sqrt(3) * Math.sin(thetaPrime));
          };
          break;

        case 'triangle':
        case 'triangle-upright':
          settings.shape = function shapeTriangle(theta) {
            var thetaPrime = (theta + Math.PI * 3 / 2) % (2 * Math.PI / 3);
            return 1 / (Math.cos(thetaPrime) +
                        Math.sqrt(3) * Math.sin(thetaPrime));
          };
          break;

        case 'pentagon':
          settings.shape = function shapePentagon(theta) {
            var thetaPrime = (theta + 0.955) % (2 * Math.PI / 5);
            return 1 / (Math.cos(thetaPrime) +
                        0.726543 * Math.sin(thetaPrime));
          };
          break;

        case 'star':
          settings.shape = function shapeStar(theta) {
            var thetaPrime = (theta + 0.955) % (2 * Math.PI / 10);
            if ((theta + 0.955) % (2 * Math.PI / 5) - (2 * Math.PI / 10) >= 0) {
              return 1 / (Math.cos((2 * Math.PI / 10) - thetaPrime) +
                          3.07768 * Math.sin((2 * Math.PI / 10) - thetaPrime));
            } else {
              return 1 / (Math.cos(thetaPrime) +
                          3.07768 * Math.sin(thetaPrime));
            }
          };
          break;
      }
    }

    /* Make sure gridSize is a whole number and is not smaller than 4px */
    settings.gridSize = Math.max(Math.floor(settings.gridSize), 4);

    /* shorthand */
    var g = settings.gridSize;
    var maskRectWidth = g - settings.maskGapWidth;

    /* normalize rotation settings */
    var rotationRange = Math.abs(settings.maxRotation - settings.minRotation);
    var minRotation = Math.min(settings.maxRotation, settings.minRotation);

    /* information/object available to all functions, set when start() */
    var grid, // 2d array containing filling information
      ngx, ngy, // width and height of the grid
      center, // position of the center of the cloud
      maxRadius;

    /* timestamp for measuring each putWord() action */
    var escapeTime;

    /* function for getting the color of the text */
    var getTextColor;
    function random_hsl_color(min, max) {
      return 'hsl(' +
        (Math.random() * 360).toFixed() + ',' +
        (Math.random() * 30 + 70).toFixed() + '%,' +
        (Math.random() * (max - min) + min).toFixed() + '%)';
    }
    switch (settings.color) {
      case 'random-dark':
        getTextColor = function getRandomDarkColor() {
          return random_hsl_color(10, 50);
        };
        break;

      case 'random-light':
        getTextColor = function getRandomLightColor() {
          return random_hsl_color(50, 90);
        };
        break;

      default:
        if (typeof settings.color === 'function') {
          getTextColor = settings.color;
        }
        break;
    }

    /* function for getting the classes of the text */
    var getTextClasses = null;
    if (typeof settings.classes === 'function') {
      getTextClasses = settings.classes;
    }

    /* Interactive */
    var interactive = false;
    var infoGrid = [];
    var hovered;

    var getInfoGridFromMouseTouchEvent =
    function getInfoGridFromMouseTouchEvent(evt) {
      var canvas = evt.currentTarget;
      var rect = canvas.getBoundingClientRect();
      var clientX;
      var clientY;
      /** Detect if touches are available */
      if (evt.touches) {
        clientX = evt.touches[0].clientX;
        clientY = evt.touches[0].clientY;
      } else {
        clientX = evt.clientX;
        clientY = evt.clientY;
      }
      var eventX = clientX - rect.left;
      var eventY = clientY - rect.top;

      var x = Math.floor(eventX * ((canvas.width / rect.width) || 1) / g);
      var y = Math.floor(eventY * ((canvas.height / rect.height) || 1) / g);

      return infoGrid[x][y];
    };

    var wordcloudhover = function wordcloudhover(evt) {
      var info = getInfoGridFromMouseTouchEvent(evt);

      if (hovered === info) {
        return;
      }

      hovered = info;
      if (!info) {
        settings.hover(undefined, undefined, evt);

        return;
      }

      settings.hover(info.item, info.dimension, evt);

    };

    var wordcloudclick = function wordcloudclick(evt) {
      var info = getInfoGridFromMouseTouchEvent(evt);
      if (!info) {
        return;
      }

      settings.click(info.item, info.dimension, evt);
      evt.preventDefault();
    };

    /* Get points on the grid for a given radius away from the center */
    var pointsAtRadius = [];
    var getPointsAtRadius = function getPointsAtRadius(radius) {
      if (pointsAtRadius[radius]) {
        return pointsAtRadius[radius];
      }

      // Look for these number of points on each radius
      var T = radius * 8;

      // Getting all the points at this radius
      var t = T;
      var points = [];

      if (radius === 0) {
        points.push([center[0], center[1], 0]);
      }

      while (t--) {
        // distort the radius to put the cloud in shape
        var rx = 1;
        if (settings.shape !== 'circle') {
          rx = settings.shape(t / T * 2 * Math.PI); // 0 to 1
        }

        // Push [x, y, t]; t is used solely for getTextColor()
        points.push([
          center[0] + radius * rx * Math.cos(-t / T * 2 * Math.PI),
          center[1] + radius * rx * Math.sin(-t / T * 2 * Math.PI) *
            settings.ellipticity,
          t / T * 2 * Math.PI]);
      }

      pointsAtRadius[radius] = points;
      return points;
    };

    /* Return true if we had spent too much time */
    var exceedTime = function exceedTime() {
      return ((settings.abortThreshold > 0) &&
        ((new Date()).getTime() - escapeTime > settings.abortThreshold));
    };

    /* Get the deg of rotation according to settings, and luck. */
    var getRotateDeg = function getRotateDeg() {
      if (settings.rotateRatio === 0) {
        return 0;
      }

      if (Math.random() > settings.rotateRatio) {
        return 0;
      }

      if (rotationRange === 0) {
        return minRotation;
      }

      return minRotation + Math.random() * rotationRange;
    };

    var getTextInfo = function getTextInfo(word, weight, rotateDeg) {
      // calculate the acutal font size
      // fontSize === 0 means weightFactor function wants the text skipped,
      // and size < minSize means we cannot draw the text.
      var debug = false;
      var fontSize = settings.weightFactor(weight);
      if (fontSize <= settings.minSize) {
        return false;
      }

      // Scale factor here is to make sure fillText is not limited by
      // the minium font size set by browser.
      // It will always be 1 or 2n.
      var mu = 1;
      if (fontSize < minFontSize) {
        mu = (function calculateScaleFactor() {
          var mu = 2;
          while (mu * fontSize < minFontSize) {
            mu += 2;
          }
          return mu;
        })();
      }

      var fcanvas = document.createElement('canvas');
      var fctx = fcanvas.getContext('2d', { willReadFrequently: true });

      fctx.font = settings.fontWeight + ' ' +
        (fontSize * mu).toString(10) + 'px ' + settings.fontFamily;

      // Estimate the dimension of the text with measureText().
      var fw = fctx.measureText(word).width / mu;
      var fh = Math.max(fontSize * mu,
                        fctx.measureText('m').width,
                        fctx.measureText('\uFF37').width) / mu;

      // Create a boundary box that is larger than our estimates,
      // so text don't get cut of (it sill might)
      var boxWidth = fw + fh * 2;
      var boxHeight = fh * 3;
      var fgw = Math.ceil(boxWidth / g);
      var fgh = Math.ceil(boxHeight / g);
      boxWidth = fgw * g;
      boxHeight = fgh * g;

      // Calculate the proper offsets to make the text centered at
      // the preferred position.

      // This is simply half of the width.
      var fillTextOffsetX = - fw / 2;
      // Instead of moving the box to the exact middle of the preferred
      // position, for Y-offset we move 0.4 instead, so Latin alphabets look
      // vertical centered.
      var fillTextOffsetY = - fh * 0.4;

      // Calculate the actual dimension of the canvas, considering the rotation.
      var cgh = Math.ceil((boxWidth * Math.abs(Math.sin(rotateDeg)) +
                           boxHeight * Math.abs(Math.cos(rotateDeg))) / g);
      var cgw = Math.ceil((boxWidth * Math.abs(Math.cos(rotateDeg)) +
                           boxHeight * Math.abs(Math.sin(rotateDeg))) / g);
      var width = cgw * g;
      var height = cgh * g;

      fcanvas.setAttribute('width', width);
      fcanvas.setAttribute('height', height);

      if (debug) {
        // Attach fcanvas to the DOM
        document.body.appendChild(fcanvas);
        // Save it's state so that we could restore and draw the grid correctly.
        fctx.save();
      }

      // Scale the canvas with |mu|.
      fctx.scale(1 / mu, 1 / mu);
      fctx.translate(width * mu / 2, height * mu / 2);
      fctx.rotate(- rotateDeg);

      // Once the width/height is set, ctx info will be reset.
      // Set it again here.
      fctx.font = settings.fontWeight + ' ' +
        (fontSize * mu).toString(10) + 'px ' + settings.fontFamily;

      // Fill the text into the fcanvas.
      // XXX: We cannot because textBaseline = 'top' here because
      // Firefox and Chrome uses different default line-height for canvas.
      // Please read https://bugzil.la/737852#c6.
      // Here, we use textBaseline = 'middle' and draw the text at exactly
      // 0.5 * fontSize lower.
      fctx.fillStyle = '#000';
      fctx.textBaseline = 'middle';
      fctx.fillText(word, fillTextOffsetX * mu,
                    (fillTextOffsetY + fontSize * 0.5) * mu);

      // Get the pixels of the text
      var imageData = fctx.getImageData(0, 0, width, height).data;

      if (exceedTime()) {
        return false;
      }

      if (debug) {
        // Draw the box of the original estimation
        fctx.strokeRect(fillTextOffsetX * mu,
                        fillTextOffsetY, fw * mu, fh * mu);
        fctx.restore();
      }

      // Read the pixels and save the information to the occupied array
      var occupied = [];
      var gx = cgw, gy, x, y;
      var bounds = [cgh / 2, cgw / 2, cgh / 2, cgw / 2];
      while (gx--) {
        gy = cgh;
        while (gy--) {
          y = g;
          singleGridLoop: {
            while (y--) {
              x = g;
              while (x--) {
                if (imageData[((gy * g + y) * width +
                               (gx * g + x)) * 4 + 3]) {
                  occupied.push([gx, gy]);

                  if (gx < bounds[3]) {
                    bounds[3] = gx;
                  }
                  if (gx > bounds[1]) {
                    bounds[1] = gx;
                  }
                  if (gy < bounds[0]) {
                    bounds[0] = gy;
                  }
                  if (gy > bounds[2]) {
                    bounds[2] = gy;
                  }

                  if (debug) {
                    fctx.fillStyle = 'rgba(255, 0, 0, 0.5)';
                    fctx.fillRect(gx * g, gy * g, g - 0.5, g - 0.5);
                  }
                  break singleGridLoop;
                }
              }
            }
            if (debug) {
              fctx.fillStyle = 'rgba(0, 0, 255, 0.5)';
              fctx.fillRect(gx * g, gy * g, g - 0.5, g - 0.5);
            }
          }
        }
      }

      if (debug) {
        fctx.fillStyle = 'rgba(0, 255, 0, 0.5)';
        fctx.fillRect(bounds[3] * g,
                      bounds[0] * g,
                      (bounds[1] - bounds[3] + 1) * g,
                      (bounds[2] - bounds[0] + 1) * g);
      }

      // Return information needed to create the text on the real canvas
      return {
        mu: mu,
        occupied: occupied,
        bounds: bounds,
        gw: cgw,
        gh: cgh,
        fillTextOffsetX: fillTextOffsetX,
        fillTextOffsetY: fillTextOffsetY,
        fillTextWidth: fw,
        fillTextHeight: fh,
        fontSize: fontSize
      };
    };

    /* Determine if there is room available in the given dimension */
    var canFitText = function canFitText(gx, gy, gw, gh, occupied) {
      // Go through the occupied points,
      // return false if the space is not available.
      var i = occupied.length;
      while (i--) {
        var px = gx + occupied[i][0];
        var py = gy + occupied[i][1];

        if (px >= ngx || py >= ngy || px < 0 || py < 0 || !grid[px][py]) {
          return false;
        }
      }
      return true;
    };

    /* Actually draw the text on the grid */
    var drawText = function drawText(gx, gy, info, word, weight,
                                     distance, theta, rotateDeg, attributes) {

      var fontSize = info.fontSize;
      var color;
      if (getTextColor) {
        color = getTextColor(word, weight, fontSize, distance, theta);
      } else if (settings.color instanceof Array) {
        color = settings.color.shift() || 'black'; // pass a array in setting, default 'black'
      } else {
        color = settings.color;
      }

      var classes;
      if (getTextClasses) {
        classes = getTextClasses(word, weight, fontSize, distance, theta);
      } else {
        classes = settings.classes;
      }

      var dimension;
      var bounds = info.bounds;
      dimension = {
        x: (gx + bounds[3]) * g,
        y: (gy + bounds[0]) * g,
        w: (bounds[1] - bounds[3] + 1) * g,
        h: (bounds[2] - bounds[0] + 1) * g
      };

      elements.forEach(function(el) {
        if (el.getContext) {
          var ctx = el.getContext('2d');
          var mu = info.mu;

          // Save the current state before messing it
          ctx.save();
          ctx.scale(1 / mu, 1 / mu);

          ctx.font = settings.fontWeight + ' ' +
                     (fontSize * mu).toString(10) + 'px ' + settings.fontFamily;
          ctx.fillStyle = color;

          // Translate the canvas position to the origin coordinate of where
          // the text should be put.
          ctx.translate((gx + info.gw / 2) * g * mu,
                        (gy + info.gh / 2) * g * mu);

          if (rotateDeg !== 0) {
            ctx.rotate(- rotateDeg);
          }

          // Finally, fill the text.

          // XXX: We cannot because textBaseline = 'top' here because
          // Firefox and Chrome uses different default line-height for canvas.
          // Please read https://bugzil.la/737852#c6.
          // Here, we use textBaseline = 'middle' and draw the text at exactly
          // 0.5 * fontSize lower.
          ctx.textBaseline = 'middle';
          ctx.fillText(word, info.fillTextOffsetX * mu,
                             (info.fillTextOffsetY + fontSize * 0.5) * mu);

          // The below box is always matches how <span>s are positioned
          /* ctx.strokeRect(info.fillTextOffsetX, info.fillTextOffsetY,
            info.fillTextWidth, info.fillTextHeight); */

          // Restore the state.
          ctx.restore();
        } else {
          // drawText on DIV element
          var span = document.createElement('span');
          var transformRule = '';
          transformRule = 'rotate(' + (- rotateDeg / Math.PI * 180) + 'deg) ';
          if (info.mu !== 1) {
            transformRule +=
              'translateX(-' + (info.fillTextWidth / 4) + 'px) ' +
              'scale(' + (1 / info.mu) + ')';
          }
          var styleRules = {
            'position': 'absolute',
            'display': 'block',
            'font': settings.fontWeight + ' ' +
                    (fontSize * info.mu) + 'px ' + settings.fontFamily,
            'left': ((gx + info.gw / 2) * g + info.fillTextOffsetX) + 'px',
            'top': ((gy + info.gh / 2) * g + info.fillTextOffsetY) + 'px',
            'width': info.fillTextWidth + 'px',
            'height': info.fillTextHeight + 'px',
            'lineHeight': fontSize + 'px',
            'whiteSpace': 'nowrap',
            'transform': transformRule,
            'webkitTransform': transformRule,
            'msTransform': transformRule,
            'transformOrigin': '50% 40%',
            'webkitTransformOrigin': '50% 40%',
            'msTransformOrigin': '50% 40%'
          };
          if (color) {
            styleRules.color = color;
          }
          span.textContent = word;
          for (var cssProp in styleRules) {
            span.style[cssProp] = styleRules[cssProp];
          }
          if (attributes) {
            for (var attribute in attributes) {
              span.setAttribute(attribute, attributes[attribute]);
            }
          }
          if (classes) {
            span.className += classes;
          }
          el.appendChild(span);
        }
      });
    };

    /* Help function to updateGrid */
    var fillGridAt = function fillGridAt(x, y, drawMask, dimension, item) {
      if (x >= ngx || y >= ngy || x < 0 || y < 0) {
        return;
      }

      grid[x][y] = false;

      if (drawMask) {
        var ctx = elements[0].getContext('2d');
        ctx.fillRect(x * g, y * g, maskRectWidth, maskRectWidth);
      }

      if (interactive) {
        infoGrid[x][y] = { item: item, dimension: dimension };
      }
    };

    /* Update the filling information of the given space with occupied points.
       Draw the mask on the canvas if necessary. */
    var updateGrid = function updateGrid(gx, gy, gw, gh, info, item) {
      var occupied = info.occupied;
      var drawMask = settings.drawMask;
      var ctx;
      if (drawMask) {
        ctx = elements[0].getContext('2d');
        ctx.save();
        ctx.fillStyle = settings.maskColor;
      }

      var dimension;
      if (interactive) {
        var bounds = info.bounds;
        dimension = {
          x: (gx + bounds[3]) * g,
          y: (gy + bounds[0]) * g,
          w: (bounds[1] - bounds[3] + 1) * g,
          h: (bounds[2] - bounds[0] + 1) * g
        };
      }

      var i = occupied.length;
      while (i--) {
        fillGridAt(gx + occupied[i][0], gy + occupied[i][1],
                   drawMask, dimension, item);
      }

      if (drawMask) {
        ctx.restore();
      }
    };

    /* putWord() processes each item on the list,
       calculate it's size and determine it's position, and actually
       put it on the canvas. */
    var putWord = function putWord(item) {
      var word, weight, attributes;
      if (Array.isArray(item)) {
        word = item[0];
        weight = item[1];
      } else {
        word = item.word;
        weight = item.weight;
        attributes = item.attributes;
      }
      var rotateDeg = getRotateDeg();

      // get info needed to put the text onto the canvas
      var info = getTextInfo(word, weight, rotateDeg);

      // not getting the info means we shouldn't be drawing this one.
      if (!info) {
        return false;
      }

      if (exceedTime()) {
        return false;
      }

      // Skip the loop if we have already know the bounding box of
      // word is larger than the canvas.
      var bounds = info.bounds;
      if ((bounds[1] - bounds[3] + 1) > ngx ||
        (bounds[2] - bounds[0] + 1) > ngy) {
        return false;
      }

      // Determine the position to put the text by
      // start looking for the nearest points
      var r = maxRadius + 1;

      var tryToPutWordAtPoint = function(gxy) {
        var gx = Math.floor(gxy[0] - info.gw / 2);
        var gy = Math.floor(gxy[1] - info.gh / 2);
        var gw = info.gw;
        var gh = info.gh;

        // If we cannot fit the text at this position, return false
        // and go to the next position.
        if (!canFitText(gx, gy, gw, gh, info.occupied)) {
          return false;
        }

        // Actually put the text on the canvas
        drawText(gx, gy, info, word, weight,
                 (maxRadius - r), gxy[2], rotateDeg, attributes);

        // Mark the spaces on the grid as filled
        updateGrid(gx, gy, gw, gh, info, item);

        // Return true so some() will stop and also return true.
        return true;
      };

      while (r--) {
        var points = getPointsAtRadius(maxRadius - r);

        if (settings.shuffle) {
          points = [].concat(points);
          shuffleArray(points);
        }

        // Try to fit the words by looking at each point.
        // array.some() will stop and return true
        // when putWordAtPoint() returns true.
        // If all the points returns false, array.some() returns false.
        var drawn = points.some(tryToPutWordAtPoint);

        if (drawn) {
          // leave putWord() and return true
          return true;
        }
      }
      // we tried all distances but text won't fit, return false
      return false;
    };

    /* Send DOM event to all elements. Will stop sending event and return
       if the previous one is canceled (for cancelable events). */
    var sendEvent = function sendEvent(type, cancelable, detail) {
      if (cancelable) {
        return !elements.some(function(el) {
          var evt = document.createEvent('CustomEvent');
          evt.initCustomEvent(type, true, cancelable, detail || {});
          return !el.dispatchEvent(evt);
        }, this);
      } else {
        elements.forEach(function(el) {
          var evt = document.createEvent('CustomEvent');
          evt.initCustomEvent(type, true, cancelable, detail || {});
          el.dispatchEvent(evt);
        }, this);
      }
    };

    /* Start drawing on a canvas */
    var start = function start() {
      // For dimensions, clearCanvas etc.,
      // we only care about the first element.
      var canvas = elements[0];

      if (canvas.getContext) {
        ngx = Math.floor(canvas.width / g);
        ngy = Math.floor(canvas.height / g);
      } else {
        var rect = canvas.getBoundingClientRect();
        ngx = Math.floor(rect.width / g);
        ngy = Math.floor(rect.height / g);
      }

      // Sending a wordcloudstart event which cause the previous loop to stop.
      // Do nothing if the event is canceled.
      if (!sendEvent('wordcloudstart', true)) {
        return;
      }

      // Determine the center of the word cloud
      center = (settings.origin) ?
        [settings.origin[0]/g, settings.origin[1]/g] :
        [ngx / 2, ngy / 2];

      // Maxium radius to look for space
      maxRadius = Math.floor(Math.sqrt(ngx * ngx + ngy * ngy));

      /* Clear the canvas only if the clearCanvas is set,
         if not, update the grid to the current canvas state */
      grid = [];

      var gx, gy, i;
      if (!canvas.getContext || settings.clearCanvas) {
        elements.forEach(function(el) {
          if (el.getContext) {
            var ctx = el.getContext('2d');
            ctx.fillStyle = settings.backgroundColor;
            ctx.clearRect(0, 0, ngx * (g + 1), ngy * (g + 1));
            ctx.fillRect(0, 0, ngx * (g + 1), ngy * (g + 1));
          } else {
            el.textContent = '';
            el.style.backgroundColor = settings.backgroundColor;
          }
        });

        /* fill the grid with empty state */
        gx = ngx;
        while (gx--) {
          grid[gx] = [];
          gy = ngy;
          while (gy--) {
            grid[gx][gy] = true;
          }
        }
      } else {
        /* Determine bgPixel by creating
           another canvas and fill the specified background color. */
        var bctx = document.createElement('canvas').getContext('2d');

        bctx.fillStyle = settings.backgroundColor;
        bctx.fillRect(0, 0, 1, 1);
        var bgPixel = bctx.getImageData(0, 0, 1, 1).data;

        /* Read back the pixels of the canvas we got to tell which part of the
           canvas is empty.
           (no clearCanvas only works with a canvas, not divs) */
        var imageData =
          canvas.getContext('2d').getImageData(0, 0, ngx * g, ngy * g).data;

        gx = ngx;
        var x, y;
        while (gx--) {
          grid[gx] = [];
          gy = ngy;
          while (gy--) {
            y = g;
            singleGridLoop: while (y--) {
              x = g;
              while (x--) {
                i = 4;
                while (i--) {
                  if (imageData[((gy * g + y) * ngx * g +
                                 (gx * g + x)) * 4 + i] !== bgPixel[i]) {
                    grid[gx][gy] = false;
                    break singleGridLoop;
                  }
                }
              }
            }
            if (grid[gx][gy] !== false) {
              grid[gx][gy] = true;
            }
          }
        }

        imageData = bctx = bgPixel = undefined;
      }

      // fill the infoGrid with empty state if we need it
      if (settings.hover || settings.click) {

        interactive = true;

        /* fill the grid with empty state */
        gx = ngx + 1;
        while (gx--) {
          infoGrid[gx] = [];
        }

        if (settings.hover) {
          canvas.addEventListener('mousemove', wordcloudhover);
        }

        if (settings.click) {
          canvas.addEventListener('click', wordcloudclick);
          canvas.addEventListener('touchstart', wordcloudclick);
          canvas.addEventListener('touchend', function (e) {
            e.preventDefault();
          });
          canvas.style.webkitTapHighlightColor = 'rgba(0, 0, 0, 0)';
        }

        canvas.addEventListener('wordcloudstart', function stopInteraction() {
          canvas.removeEventListener('wordcloudstart', stopInteraction);

          canvas.removeEventListener('mousemove', wordcloudhover);
          canvas.removeEventListener('click', wordcloudclick);
          hovered = undefined;
        });
      }

      i = 0;
      var loopingFunction, stoppingFunction;
      if (settings.wait !== 0) {
        loopingFunction = window.setTimeout;
        stoppingFunction = window.clearTimeout;
      } else {
        loopingFunction = window.setImmediate;
        stoppingFunction = window.clearImmediate;
      }

      var addEventListener = function addEventListener(type, listener) {
        elements.forEach(function(el) {
          el.addEventListener(type, listener);
        }, this);
      };

      var removeEventListener = function removeEventListener(type, listener) {
        elements.forEach(function(el) {
          el.removeEventListener(type, listener);
        }, this);
      };

      var anotherWordCloudStart = function anotherWordCloudStart() {
        removeEventListener('wordcloudstart', anotherWordCloudStart);
        stoppingFunction(timer);
      };

      addEventListener('wordcloudstart', anotherWordCloudStart);

      var timer = loopingFunction(function loop() {
        if (i >= settings.list.length) {
          stoppingFunction(timer);
          sendEvent('wordcloudstop', false);
          removeEventListener('wordcloudstart', anotherWordCloudStart);

          return;
        }
        escapeTime = (new Date()).getTime();
        var drawn = putWord(settings.list[i]);
        var canceled = !sendEvent('wordclouddrawn', true, {
          item: settings.list[i], drawn: drawn });
        if (exceedTime() || canceled) {
          stoppingFunction(timer);
          settings.abort();
          sendEvent('wordcloudabort', false);
          sendEvent('wordcloudstop', false);
          removeEventListener('wordcloudstart', anotherWordCloudStart);
          return;
        }
        i++;
        timer = loopingFunction(loop, settings.wait);
      }, settings.wait);
    };

    // All set, start the drawing
    start();
  };

  WordCloud.isSupported = isSupported;
  WordCloud.minFontSize = minFontSize;

  // Expose the library as an AMD module
  if (typeof define === 'function' && define.amd) {
    define('wordcloud', [], function() { return WordCloud; });
  } else if (typeof module !== 'undefined' && module.exports) {
    module.exports = WordCloud;
  } else {
    global.WordCloud = WordCloud;
  }

})(this); //jshint ignore:line
</script>
<script>// create element
function newlabel(el){
  var newDiv = document.createElement("div");
  var newSpan = document.createElement("span");
  newDiv.id = 'wcLabel';
  newSpan.id = "wcSpan";
  el.appendChild(newDiv);
  document.getElementById("wcLabel").appendChild(newSpan);
}

// hover function
function cv_handleHover(item, dimension, evt) {
  var el = document.getElementById("wcLabel");
  if (!item) {
    el.setAttribute('hidden', true);

    return;
  }

  el.removeAttribute('hidden');
  // console.log(evt.srcElement.offsetLeft);

  el.style.left = dimension.x + evt.srcElement.offsetLeft + 'px';
  el.style.top = dimension.y + evt.srcElement.offsetTop + 'px';
  el.style.width = dimension.w + 'px';
  el.style.height = dimension.h + 'px';

  this.hoverDimension = dimension;

  document.getElementById("wcSpan").setAttribute(
    'data-l10n-args', JSON.stringify({ word: item[0], count: item[1] }));
  document.getElementById("wcSpan").innerHTML =item[0]+":" + item[1];

}

function updateCanvasMask(maskCanvas) {
    var ctx = maskCanvas.getContext('2d');
    var imageData = ctx.getImageData(
        0, 0, maskCanvas.width, maskCanvas.height);
    var newImageData = ctx.createImageData(imageData);

    var toneSum = 0;
    var toneCnt = 0;
    for (var i = 0; i < imageData.data.length; i += 4) {
        var alpha = imageData.data[i + 3];
        if (alpha > 128) {
            var tone = imageData.data[i]
                + imageData.data[i + 1]
                + imageData.data[i + 2];
            toneSum += tone;
            ++toneCnt;
        }
    }
    var threshold = toneSum / toneCnt;

    for (var i = 0; i < imageData.data.length; i += 4) {
        var tone = imageData.data[i]
            + imageData.data[i + 1]
            + imageData.data[i + 2];
        var alpha = imageData.data[i + 3];

        if (alpha < 128 || tone > threshold) {
            // Area not to draw
            newImageData.data[i] = 0;
            newImageData.data[i + 1] = 0;
            newImageData.data[i + 2] = 0;
            newImageData.data[i + 3] = 0;
        }
        else {
            // Area to draw
            // The color must be same with backgroundColor
            newImageData.data[i] = 255;
            newImageData.data[i + 1] = 255;
            newImageData.data[i + 2] = 255;
            newImageData.data[i + 3] = 255;
        }
    }

    ctx.putImageData(newImageData, 0, 0);
    console.log(maskCanvas.toDataURL());
}



//mask function
function maskInit(el,x){
  console.log(1)
  str = x.figBase64;
  //console.log(str)
  var newImg = new Image();
  newImg.src = str;
  newImg.style.position = 'absolute';
  newImg.style.left = 0;
  // console.log(el.clientHeight);
  newImg.width = el.clientWidth;
  newImg.height = el.clientHeight;
  // maskCanvas = init(el, x, newImg);
  vvalue = 128

  ctx = el.firstChild.getContext('2d');

                ctx.drawImage(newImg, 0, 0, canvas.width, canvas.height);
                updateCanvasMask(ctx);





            WordCloud(el.firstChild, { list: listData,
                  fontFamily: x.fontFamily,
                  fontWeight: x.fontWeight,
                  color: x.color,
                  minSize: x.minSize,
                  weightFactor: x.weightFactor,
                  backgroundColor: x.backgroundColor,
                  gridSize: x.gridSize,
                  minRotation: x.minRotation,
                  maxRotation: x.maxRotation,
                  shuffle: x.shuffle,
                  shape: x.shape,
                  rotateRatio: x.rotateRatio,
                  ellipticity: x.ellipticity,
                  clearCanvas: false,
                  drawMask: true,
                  hover: x.hover || cv_handleHover,
                  abortThreshold: 3000
                  });
}

</script>
<script>HTMLWidgets.widget({

  name: 'wordcloud2',

  type: 'output',

  initialize: function(el, width, height) {
    var newCanvas = document.createElement("canvas");
    newCanvas.height = height;
    newCanvas.width = width;
    newCanvas.id = "canvas";

    el.appendChild(newCanvas);
    newlabel(el);
    return(el.firstChild);
  },
  renderValue: function(el, x, instance) {
  // parse gexf data
        listData=[];
        for(var i=0; i<x.word.length; i++){
          listData.push([x.word[i], x.freq[i]]);
        }
     if(x.figBase64){

        maskInit(el,x);
        console.log(3)

      }else{
        WordCloud(el.firstChild, { list: listData,
                        fontFamily: x.fontFamily,
                        fontWeight: x.fontWeight,
                        color: x.color,
                        minSize: x.minSize,
                        weightFactor: x.weightFactor,
                        backgroundColor: x.backgroundColor,
                        gridSize: x.gridSize,
                        minRotation: x.minRotation,
                        maxRotation: x.maxRotation,
                        shuffle: x.shuffle,
                        shape: x.shape,
                        rotateRatio: x.rotateRatio,
                        ellipticity: x.ellipticity,
                        drawMask: x.drawMask,
                        maskColor: x.maskColor,
                        maskGapWidth: x.maskGapWidth,
                        hover: x.hover || cv_handleHover
                        });
      }
    },
      resize: function(el, width, height) {
      }

});
</script>

</head>
<body>
<div id="htmlwidget_container">
  <div id="htmlwidget-8d469893cdeb3fe82a03" style="width:960px;height:500px;" class="wordcloud2 html-widget"></div>
</div>
<script type="application/json" data-for="htmlwidget-8d469893cdeb3fe82a03">{"x":{"word":["bolsonaro","leite","condensado","governo","presidente","imprensa","brasil","milhões","impeachment","contra","sobre","jair","agora","gente","ainda","tudo","todo","fazer","nada","pode","rabo","país","cara","povo","pandemia","enfiar","pessoas","todos","hoje","quer","sempre","coisa","nunca","gastos","puta","porque","dinheiro","disse","lula","assim","câmara","aqui","mundo","mito","falar","deus","gastou","pariu","votei","anos","melhor","verdade","falando","dizer","esquerda","latas","corrupção","fala","pedido","vacina","vida","covid","ninguém","compra","pior","política","mídia","reais","merda","morte","novo","acho","maia","deve","fazendo","sabe","votou","além","desse","caio","dilma","vamos","falta","globo","oposição","fake","favor","vídeo","alguém","votar","ladrão","menos","federal","conta","lata","news","poder","cada","corrupto","pessoa","bolsonarocorruptodoano","lado","gado","história","maior","soucristaosoubolsonaro","culpa","enquanto","mandou","outro","presidência","quero","transparência","família","ficar","portal","ygona","algo","alguma","pouco","genocida","saúde","candidato","lira","oxigênio","casa","então","grande","manda","nesse","brasileiro","desde","forabolsonaro","precisa","tanto","congresso","filho","porra","tempo","antes","crimes","direita","estado","ministro","onde","político","chiclete","dois","lixo","pois","tomar","acabou","comprar","disso","durante","jornalistas","parte","qualquer","vergonha","apoio","após","brasileiros","cristão","passa","toda","bolsonaroate","doria","eleição","outros","república","sendo","deputados","manaus","moça","paulo","acha","eleito","igual","meio","apenas","caso","comprou","lugar","público","quanto","queria","nessa","parabéns","saber","campanha","deputado","dessa","segundo","fica","mandar","mesma","sair","tipo","tirar","voto","crime","forças","quase","exército","feito","nele","ódio","olha","parece","pesquisa","boca","doce","eleger","leitecondensadosuperfaturado","militares","volta","deveria","fazem","hora","nenhum","pública","segue","apoia","enganou","greve","mourão","sabia","coisas","dias","forma","pagar","veja","vejo","brasileira","caminhoneiros","compras","eduardo","messias","momento","nome","reeleito","votos","burro","caralho","certo","deixar","dória","líder","muita","pazuello","rodrigo","tava","amigo","amor","cabeça","causa","claro","defende","defender","deixa","duas","mandato","mano","nova","querem","realmente","responsabilidade","amazonas","apoiadores","armadas","corruptos","eleições","explicar","ficou","jornalista","logo","merece","pessoal","vírus","auxílio","bozo","canalha","entender","executivo","filhos","gasta","homem","primeiro","razão","resposta","sido","todas","vacinação","vacinas","algum","atenção","caiu","centrão","churrascaria","colocar","defendendo","educação","faça","gasto","morrer","muitos","nenhuma","obrigado","opinião","problema","vendo","cair","carlos","demais","direito","emendas","errado","falou","galera","guedes","impeachmentbolsonarourgente","motivo","notícia","rede","relação","vezes","atacar","cima","continua","democracia","eleitor","emergencial","escândalo","espero","jeito","junto","justiça","nacional","noite","passar","pede","sociais","trabalho","valor","chega","chicletes","ciro","discurso","foda","frente","gosta","impeachmentja","mentira","passado","planalto","população","preso","redes","urgente","alimentos","artistas","bosta","brasília","certeza","dizendo","exatamente","explica","foto","imagem","jamais","kkkkkk","narrativa","nega","partidos","saco","trump","única","bando","bolsominion","bolsonarista","caráter","chefe","combate","desgoverno","existe","grupo","kkkkk","líderes","ministério","poderia","possível","respeito","ruim","semana","social","vendeu","acredito","ataca","baixo","bandido","cargo","chora","conseguiu","coronavac","difícil","elegeu","empresas","entrevista","fabricada","kkkk","mamata","militar","morreu","ontem","outra","prisão","prometeu","sério","twitter","vontade","bolsonaroorgulhodobrasil","consegue","continuar","dando","defesa","derrubar","desculpa","fato","fizeram","ganhar","manter","mostra","nível","partido","pedidos","pergunta","piada","podre","públicos","senhor","tratamento","turno","usando","vidas","absurdo","ataque","batista","butantan","cadeia","comer","crise","daqui","ditadura","eleitores","estar","golpe","haddad","lembrar","maioria","pano","parar","parlamentares","podem","psol","questão","usar","vagabundo","vice","acabar","arthur","cadê","doses","enfia","fico","final","fundo","imagina","jaircondensadoate","lumena","matéria","moro","mortes","nota","odeio","outras","palavras","passando","pedir","preciso","primeira","próprio","reunião","seguir","situação","veio","vendido","virou","achando","amado","apoiar","bilhões","caixas","capitão","chamar","china","colocou","empresária","evangélicos","evento","fácil","felipe","fome","foradoria","governador","jornal","justificar","lista","medo","miliciano","pensa","podia","querendo","resto","tanta","tentando","triste","turma","vivo","acredita","alimentação","basta","bora","ciência","cloroquina","cristãos","dentro","ditador","dizem","economia","fiuk","flávio","inclusive","instagram","leva","luta","matar","mentiroso","morrendo","nesta","novamente","obrigados","pagou","palácio","passou","pensando","principalmente","real","reeleger","salvar","votado","absurdos","alguns","almoço","amanhã","apoiou","assunto","atacando","base","bilhão","canalhas","caos","consigo","dados","engraçado","esquerdista","festa","forabolsonarogenocida","força","horas","invés","kkkkkkkk","kkkkkkkkkk","mandando","moral","necessidade","petista","quiser","religiosos","sabem","sociedade","trabalhar","três","velha","abrir","acaba","ação","achar","bonner","brother","comunista","contrário","conversa","coragem","diferente","ernesto","erro","estados","extras","forte","gestão","honesto","impeachmentsalvavidas","levou","liranão","manhã","meses","mulher","notícias","podemos","políticos","programa","querer","representa","simples","tentar","total","triplex","vira","voltar","votaram","aconteceu","acordo","ambiente","amigos","apelo","ataques","bombons","comando","comida","cristã","deixou","desses","divulgar","dizia","eleitoral","entra","equipe","escroto","estratégia","exemplo","extrema","façam","falam","fechado","ganha","ganhou","gastar","gosto","guerra","idiota","jesus","joão","joga","justifica","leia","leitecondensado","longe","máscara","milhares","mínimo","mostrar","orgulho","ouvir","papo","pedindo","perder","perdeu","ponto","processo","prova","quarta","queiroz","queremos","seguidores","senado","sentido","sinal","superfaturamento","temer","tenta","terra","vale","viva","voce","xinga","ações","adianta","ajuda","alexandre","antagonista","araújo","assista","atrás","aumento","brigadeiro","caras","carreata","chegar","começou","cometidos","covarde","decoro","deixe","desgraçado","desinformação","dessas","diesel","empatia","empregos","encher","erros","farra","filha","foco","genocídio","governar","graças","impeachmentbolsonaro","importante","insumos","interesse","iria","isolamento","janeiro","kalil","lavagem","liberal","liberdade","livre","mandetta","maria","mental","militante","ministros","mortos","narrativas","países","palavrão","pauta","pedem","pensei","perde","precisamos","precoce","pressão","produto","rindo","roubo","sinto","tarde","tentativa","troco","único","unidades","usou","vários","velho","acham","acontece","ajudar","aliás","anexo","animal","apoiando","baleia","bate","bolsonaristas","café","cobrar","continuem","corte","criminoso","criou","desespero","emissora","empresa","enfiem","entrar","equipamentos","esconder","frita","futuro","geral","gomes","huck","ignorância","impeachmentjá","incompetente","infelizmente","informação","início","jornalismo","juntos","justamente","kkkkkkk","levar","máquina","meme","milhão","monte","neste","nisso","número","palavra","palavrões","pegar","pensar","perfil","personagem","porém","prioridade","projeto","redebbb","responsável","revolta","roubar","saiu","seguia","sentiu","sinceramente","tempos","tendo","vagabundos","verba","vive","voltou","vote","acima","afirmou","agenda","alfafa","altura","aponta","argumento","arrependido","azevedo","batata","biden","bombom","botar","bunda","caminho","caminhoneiro","cartão","chegou","científica","classe","comprando","comunistas","conseguir","contratos","coronavírus","cortou","culpar","desejo","desta","devem","diante","disputa","enfim","errou","especial","esperar","esqueceu","esquerdalha","falso","fatos","faustão","feira","fila","folha","general","governos","hipocrisia","hospitais","igrejas","impostos","incomoda","independente","inferno","inquérito","jogo","meia","memória","mente","morre","nação","noção","nojo","obrigação","olhos","pastores","pátria","pegou","perfeito","postar","precisam","preço","presidencial","problemas","produtos","raiva","resultado","roberto","seguinte","site","thread","tiro","viram","vitória","xingar","youtube","achei","acontecer","acreditar","acusações","afinal","afirma","aglomeração","aguenta","algumas","alta","aplaudindo","apoiam","apresenta","apresentar","bater","bolso","bolsonarotemrazao","cabelo","capaz","cargos","casos","chama","cheio","chupa","começa","comportamento","compromisso","condenado","convence","criança","criar","criticar","custa","destino","diabo","diferença","digo","doença","edição","enganado","entende","entendeu","entendi","escolha","estranho","facada","famílias","faria","figura","gritando","gritar","grupos","humor","ideia","impeachmentdebolsonarourgente","importação","instituições","inteiro","inteligente","internacional","investigação","investigar","josé","livrar","lógica","manifesto","menor","mentiras","mesmos","militância","morto","mudar","muitas","naiara","norte","nunes","odeia","padaria","pais","palhaçada","partir","patriota","pcdob","pediu","popularidade","porta","projetos","propaganda","própria","protocolam","puto","quantidade","receber","recursos","redução","reeleição","refrigerante","rejeição","repudia","risco","ruas","seguidor","sigo","silêncio","somente","texto","toma","torturador","trabalhadores","viver","votação","xingando","acesso","acontecendo","afirmar","agir","água","aguento","ajudou","amazônia","análise","apoiador","aprender","aprovação","armas","artigo","assina","atual","baixaria","barra","boas","caixa","cancelamento","cancelar","caro","chorando","cidadão","cidade","coloca","começar","comemorar","comeu","comum","condução","conhece","conservador","coração","cota","cresce","críticas","culpado","decisão","defendeu","desgraça","deste","devia","dividido","doente","estimação","familia","fechar","fechou","feio","feita","feliz","fiocruz","ford","funcionários","gays","gostar","grave","hipócrita","ignora","imbecil","importa","informou","irão","istoé","linha","live","loucura","luciano","maneira","manifestação","massa","medidas","memes","mensalão","mentir","mentiu","mesa","michelle","militantes","mulheres","mundial","nego","negócios","neto","nhonho","nordeste","obrigada","onda","órgãos","paciência","papel","pastor","pena","próximas","quantos","quis","realidade","reclamar","reformas","sabiam","seguiu","seis","sozinho","surpresa","tomando","torno","totalmente","umas","valeu","várias","vencer","vídeos","abriu","aceita","achou","acorda","acreditam","adora","aliados","amiga","atacou","biscoito","bolsonarismo","bota","brasileiras","cala","cantores","certa","chamado","chamando","chamou","chorar","cometeu","comprei","concordo","condições","conselho","cool","corno","corporativo","corta","credibilidade","cria","cristo","crítica","cúmplice","derrotar","desejar","destruição","dono","efeito","emprego","enem","enorme","escondeu","esgoto","esquece","essencial","estatais","evitar","exclusivo","explicação","expressão","faço","fakenews","falo","famoso","federais","finge","fique","fizer","fogo","fuder","gabinete","globolixo","idiotas","igreja","imaginando","impossível","instituto","jogar","justificativa","kkkkkkkkk","liberais","liberalismo","liberar","língua","literalmente","manhattanconnection","marinha","matou","merkel","milhoes","minutos","moleque","mostrando","mostrou","motivos","muda","mudou","ordem","paga","pagando","peço","perto","pimenta","pobre","pobres","poço","poderes","postura","preocupar","procurando","provas","próximo","psicopata","pura","quebrado","queremosbolsonaroate","questiona","reação","recente","reforma","roubou","rumo","saiba","santa","serem","significa","simplesmente","suja","suposto","tosco","tragédia","últimos","unidos","vacinados","valores","vejam","verdadeiros","verme","video","vítima","administração","alvorada","antecedência","aparece","apertada","apesar","aras","argentina","arrombado","artur","atacado","atitude","atos","besta","boçal","bolsominions","bonoro","burra","busca","calça","caminhoneiroscontradoria","canal","cancelado","câncer","católicos","cedo","ceia","cena","cerca","cereal","chance","chantilly","chocolate","civil","coletiva","come","começo","comendo","completo","comprado","comunicação","conheço","constituição","contas","continue","critica","cultura","cúmplices","dama","damares","daquilo","daria","dava","declaração","defensor","deputada","desdenha","desemprego","destinados","devido","dino","direitos","discursos","distribui","divulgação","divulgando","dúvida","econômica","educado","elegeram","embora","encontrar","enganados","enganar","entretenimento","época","errada","escola","esposa","esquema","esquerdistas","estadão","europa","excelente","exercito","exterior","falava","famosos","fascista","fazia","fiscais","guarujá","gula","hahaha","haverá","havia","humanidade","idade","inacreditável","índia","indicado","informações","interesses","internet","irmã","irmão","juiz","juros","lacração","latinha","lembra","lembrei","lidera","liga","link","liranao","lixos","louco","machista","macron","manifestações","março","média","médico","mercado","merdas","merecem","milícia","milionária","mimimi","movimentos","mudança","negócio","óbvio","oposto","parem","participar","passo","pequeno","personagens","piorar","popular","portugal","posso","precisando","presta","principais","print","privado","professores","profissionais","programas","protocola","provavelmente","publicamente","publico","publicou","quais","rachadinha","racista","rapaz","rastros","respeita","responde","responder","responsáveis","retardado","revista","ridículo","rola","rossi","saída","sangue","saudades","segunda","segurança","senso","sequer","sera","serio","sertanejos","serve","show","siga","soltou","sorte","sucesso","sujo","super","talvez","tamanha","tática","tentou","terrorista","teto","tira","tirou","transformar","trás","trouxa","última","último","unidade","venda","vender","vergonhoso","vinho","violência","virar","vota","votará","votaria","abertura","acabei","aceitar","acharam","aécio","afastamento","agressivo","agrícola","ajude","aliado","alimentar","amar","anda","apela","argumentos","arma","assassino","assessor","assumir","assusta","autoriza","babaca","bahia","batendo","benefícios","bicho","blogueiros","bolsonarogenocida","breve","buraco","burros","caloteiro","capacidade","carne","censura","chapa","chata","chegando","clique","comentário","comigo","comunismo","consiga","contar","conversas","costas","couro","creio","cretina","criado","criminosos","criticou","curral","deboche","defendem","deixando","denuncia","descobrir","desempregados","desesperado","destruir","diria","dito","doido","dona","dory","dura","dúvidas","duvido","econômico","empréstimo","encontro","enfiou","ensinou","entidades","entrega","episódio","escancarou","escândalos","escrito","esperança","esquerdopatas","estara","estaria","estudar","expor","exportar","extremamente","face","facebook","fechada","fechadocombolsonaroate","feia","ficam","fiquei","forabolsonarocondensado","fraude","fudido","gados","gato","gazetarevolucionaria","gostou","governadores","governante","gripezinha","guloseimas","hahahaha","haver","hein","histórico","homens","idéia","idosos","imaginar","impunidade","indo","infundadas","inimiga","inimigos","inteligência","interferência","jornais","jornalnacional","jumento","juro","justo","karol","kkkkkkkkkkk","licitação","limite","limites","lutou","mando","manifestar","mãos","máscaras","matando","matariam","médicos","medida","metendo","milicianos","modo","municípios","neles","nojento","normal","novos","números","objetivo","ofende","oficial","omissão","operação","otário","pacheco","parada","pastel","pega","pensam","pensamento","penso","perda","peso","petistas","pfizer","pizza","plano","polícia","politica","possa","post","postando","povão","praticamente","preços","prefeito","prega","preocupado","presidentes","privatizações","professor","pronto","protocolado","protocolaram","provam","públicas","puxa","qualidade","quatro","queda","raiz","ramos","recado","relações","representantes","resolver","revela","risada","rolando","roubalheira","roubando","sabendo","saia","santo","seguindo","senhora","sistema","sobra","socorro","sofrer","sorocaba","suficiente","superior","supermercado","supremo","terapia","teste","tetas","time","toca","trabalhador","traz","vacinar","vendendo","venezuela","verbas","vindo","vítimas","vivendo","votando","votarei","xingou","zero","abre","aceite","administrativa","afundando","aglomerar","alcolumbre","alma","ambos","ampla","anti","anvisa","aplaudir","apoie","apontar","aposto","apresentam","arrependidos","assistindo","assistir","atriz","atuação","augusto","ausência","autoridades","avaliação","azenate","baixa","bangu","beijos","blogueiro","bobo","bolha","boulos","briga","brincadeira","bucal","burrice","caia","caixinhas","campo","campos","caneta","capital","carioca","carla","carluxo","centro","cérebro","chamam","chorão","choro","cilindros","clara","clima","cobra","código","cofins","colegas","cólica","collor","colocaram","coluna","comentários","comparação","completa","completamente","confiança","conseguem","conservadores","considera","controlariam","convenceu","coringa","correto","corrupta","cozinha","crianças","crueldade","cuecão","cuidado","cúpula","custas","custo","dado","davos","debochando","década","decreto","denunciar","depende","derrota","descaso","descer","desmentindobolsonaro","despreparado","desqualificado","desumano","deveriam","devolve","diga","diogo","dita","dívida","divulga","doentes","dormir","eficácia","elegemos","elite","energia","enquete","entendo","entrou","erradas","escolheu","escolhido","escória","espécie","espera","estará","estarão","estilo","ética","exato","existir","exorbitantes","extra","fachin","falácia","falha","faltando","farinha","fascismo","fazenda","fecha","fedeu","feitos","fele","fevereiro","finalmente","firme","fiscal","fizesse","flor","fórum","fossa","funciona","galerinha","gilberto","gilmar","gleisi","golpista","governado","graça","grandes","grita","hiperfaturamento","humano","ignorante","ilegal","imaginem","imagino","imediatamente","importantes","impressão","incrível","influenciar","influir","inimigo","insta","inteira","intelectual","interessa","interessante","inútil","inveja","inventar","investigado","investir","irritado","israel","jefferson","jovens","juntar","kassio","laboratórios","lados","lama","lamentável","legal","legislativo","lembro","levantar","leve","liberou","light","linda","lindo","lockdown","luis","mande","marca","mata","mentirosa","metade","minas","minto","monstro","morrido","moura","namoral","naquele","negacionismo","negacionista","negativa","negligência","nesses","nestlé","neves","ninguem","nutella","obsessão","ocupar","olavo","olhando","olhar","opção","orçamento","orgia","ótimo","oxford","paçoca","papai","participantes","penal","perdendo","perguntar","piores","plausível","plena","porrada","posição","possibilidade","posta","poxa","praga","prática","precisava","prefere","prefiro","preocupada","pressionar","prestar","principal","procurar","promessa","próprios","proteger","psdb","quantas","quebra","querido","quinta","referindo","regras","relatório","religiosas","remédios","repúdio","resolve","responda","respondeu","responsabilidades","retira","rick","ridícula","sabemos","sabotar","saíram","salvando","saudade","segundos","senador","senão","sente","sentir","série","serviu","slogan","sócio","sofreu","solidariedade","suellen","tambem","tantos","tatuaria","tema","tentaram","tento","terem","tirando","toffoli","tortura","trabalhando","trariam","troca","turbinar","união","universidades","veículos","verdadeira","vereador","vias","vista","votamos","vulgo","abraço","absolutamente","absurda","açaí","acaso","acreditem","acreditou","acuado","acusa","admite","adoro","adversário","aeronáutica","agências","aglomerações","aglomerando","aglomerou","agosto","agroboy","aguentar","ainnn","ajudaram","ajudem","alcance","alem","aliança","alienar","alto","anal","anterior","anteriores","aparecer","apareceu","apoiado","apoiaram","apresentado","apresentaram","aproveita","apurar","articular","asfixiados","assinaturas","assine","assume","assumiu","assuntos","atendimento","atentado","atitudes","atlas","aulas","aumenta","aumentaram","aumentou","autores","autorizou","aviso","bala","balde","banco","barbárie","barco","basicamente","bauru","bebê","beira","bizarro","block","boiada","bola","bolsa","bolsodoria","bomba","bonito","braço","brincar","brizola","cagando","calar","campeonato","canalhice","candidatos","candidatura","cantor","capacho","capim","cego","cenário","chamada","chato","checagem","chegamos","chilique","chinesa","chulo","churrasco","cinismo","círculo","clero","cola","colocando","colunista","combater","começamos","comemora","comemorando","comenta","comentar","comentou","comércio","comparar","comparou","comprados","comprinhas","conclusão","condenação","condensados","condensando","conduta","conexão","confio","confira","conforme","conhecimento","consciência","conseguimos","conspirando","construiu","consumidor","consumiu","contou","contribuinte","conversar","corja","corre","corresponde","cortar","crescer","cretino","criaram","criminosa","cristianismo","criticado","crônico","cuba","culpados","curso","danilo","daqueles","darão","debate","debochou","decência","decidir","defendo","deixaram","deixem","demissão","demitido","demônio","demonstra","dente","dentre","denúncias","depender","depositou","deprimido","derruba","derrubada","descobriu","desejando","desempenho","desesperada","desesperados","desmatamento","despesas","devemos","dever","diariamente","diário","dignidade","diminuindo","direta","direto","diretor","discussão","dispensa","distribuir","distribuiu","docinho","domingo","dupla","duvida","eibolsonarovaipraputaquepariu","eita","elba","elegem","eleitorais","eleitos","empenho","enfiarem","engana","entanto","entao","entenda","entendendo","entenderam","entendido","entregar","envergonha","erra","escolas","espírito","esqueça","esqueci","estraga","eternamente","eustáquio","evidente","existem","fábricas","falas","falei","falsos","faltam","faltou","faturamento","fechados","felicidade","férias","fernández","fernando","fiat","ficha","fiel","fingindo","fofo","foge","follow","followtrick","forafundodafossa","fortes","frase","frota","fruto","gangue","ganhando","garantir","gargalhando","gasolina","gaspari","gastado","gaveta","generais","gênero","genocidas","gera","geração","globonews","golden","gostei","gostoso","governantes","gritos","grosso","herói","higiene","hipócritas","hitler","honestidade","horário","horrível","humana","idaf","ideologia","iguais","imagens","impeachmentdebolsonaro","impedimento","importância","impropérios","imunda","imunizados","inaceitável","incluindo","incompetência","indicação","inep","inepto","inflação","informa","informar","insinuou","instância","inúteis","irmãos","irrita","jacaré","jato","jeferson","jogado","jogou","jovem","julgar","kataguiri","lacrar","lamber","lance","laranja","lava","lavar","leitão","levando","liderança","ligar","linguagem","livro","livros","longo","lutar","malafaia","maldita","maluco","mané","manipulações","maquiagem","marcoantoniovilla","marina","mascar","mecanismos","médio","melhorar","menina","mentindo","mera","merecia","meretrício","mesmas","metas","meter","metrópoles","milico","milionários","minions","ministérios","mistura","mobilização","moço","monark","moraes","moralidade","morreram","morresse","mortadela","movimento","naquela","negar","neymar","noticiar","obra","obscuros","ocorre","ocorreu","ofendeu","organizado","origem","otários","ouvi","pago","palhaço","parasita","parcela","pare","parecendo","parecer","parecido","parlamento","passada","passam","passaram","passei","paternidade","patriotas","pautas","peguei","peito","peixinho","pense","pensionistas","pequena","perceber","percebeu","perdoar","período","pesquisas","pete","pianinho","pilantra","piñera","pingo","planos","poha","polêmica","porquê","portanto","posse","postagem","poucos","poupe","prazo","precisar","preferem","preocupação","preparado","preparar","presentes","presidenta","presos","procurou","produtivo","proibido","projota","promessas","pronunciamento","pros","provar","próxima","pseudo","publicidade","pudim","quebrando","quebrou","queixa","queriam","querida","raíz","ranço","rápido","reage","receita","reclamando","recorde","redações","reelege","referência","reforça","regra","regressiva","relacionamento","remédio","repasse","repente","repetir","reportagem","representação","representado","reputação","resolveu","respeitam","respeitem","resta","restaurante","resumo","reúne","revelação","rico","riscos","robô","robôs","rodolfo","roraima","rouba","roubava","safado","saído","saindo","saliva","sanidade","sarah","satisfação","secou","semanas","semestre","sexo","shower","silva","sonha","sonho","sotaque","sujeito","superfaturado","superfaturados","supérfluos","surgiu","surpreende","suspeita","suvaco","tais","talibã","tamanho","tapioca","temperatura","temperos","tentam","tente","testa","tirado","tiram","tomou","tornar","trabalha","trabalhou","traição","traidor","traiu","trata","tratar","treta","tribunal","trick","trilhões","trouxe","trudeau","unem","unir","urnas","usam","ustra","vachina","vence","venceu","verdadeiro","vermes","vexame","vimos","vinhos","visto","voces","vossa","whatsapp","xingamento","xingamentos","aberta","abjeto","aborto","abstinência","abuso","abusos","abutres","acesse","acompanhar","acontecido","acordou","acumula","acusação","acusar","adiantar","administra","adoçado","adoçar","afastado","afronta","agência","agindo","agradece","agressiva","agride","aguardando","aguardo","ainnnnnn","alagoas","alegria","aleluia","alguem","alimenta","alimento","alinhamento","altos","alvo","ambientais","ameaça","ameaçam","ameaçou","américa","amigão","amoedo","andam","andando","angariar","anglicanos","animais","anitta","anticristo","ânus","aonde","apaga","apagar","apodrecer","apoiadora","apontando","aprendeu","apresentamos","aprovou","apuração","arnaldo","arrependeu","arrependimento","artigos","asneira","asno","asnos","assassinos","assinada","assinaram","assistam","assiste","assisto","assustador","astrazeneca","atentar","atividade","atrapalha","áudio","aula","avançar","avanço","avisa","avisar","baita","bandidos","banheira","bastante","batalha","batem","bateu","batistas","bêbado","bebidas","bela","beleza","benefício","beneficiou","bicha","biroliro","boicotando","bolas","bolo","botequim","braga","branco","brechas","brigão","bruno","cabe","cade","cadeira","cãesdocapital","cagada","caído","caindo","calão","call","calma","camara","campeão","cancela","cancelando","candidatar","cansa","cansada","cansam","cantar","capanga","capitalistas","carai","caraio","carga","caribe","carnaval","carreatas","carro","carta","carteirinha","carvalho","casamento","casas","categoria","caviar","cegos","cercadinho","cercado","certíssimo","chacota","cheia","cheiro","chinês","chorou","chutar","ciclo","cidadãos","cientistas","cinco","cirurgia","claque","clássico","cliente","coca","cofres","coisaaaaaaaa","colapso","coloquem","começaram","comercial","comi","cômico","comitiva","comparando","complicado","composição","compramos","comprava","compre","comunidade","comunistada","concordado","concordar","condençado","condensa","condição","confins","confirmou","confunde","conhecer","conheci","conhecido","conseguindo","conseguiram","conservadora","consideram","consome","constantes","constitucional","consumir","contagem","conteúdo","contexto","continuará","controlar","controlaria","controle","convencer","convenhamos","coorporativo","corpo","correndo","cortina","costumeiramente","credo","criação","criatura","cristãs","criticaram","críticos","cruel","cueca","cuidar","culpando","culpe","cumprir","cumpriu","curto","cuzão","daniel","daquele","data","david","debochar","debochava","décadas","declarar","defeca","defensores","define","definitivamente","demente","denegrir","denunciou","depósitos","descaradamente","descoberto","descobri","descobriram","desculpas","desdenhou","desenvolvimento","desequilíbrio","desfrutam","desgoverna","desisti","desmandos","desmentir","desnecessário","desonestidade","desonesto","despesa","despreza","destes","destruindo","desumanização","desviou","detalhe","detalhes","detona","detonou","devida","dezembro","difama","dimensão","direitinho","diretamente","diretora","disser","distanciamento","distantes","distorcer","ditadores","diversos","divida","divulgou","diziam","documento","doutor","dpvat","duro","dúzia","eficiência","egito","eireli","eleitora","eliminado","elio","embaixador","embarcaram","emenda","emplacar","empresário","empurrar","enchendo","encontrado","energúmeno","engradado","ensina","ensinar","ensino","entregues","entrei","enviado","envolve","envolvidos","equivalente","escatológico","escolhas","escolhe","escolher","escondem","espaço","espalhando","espalhe","espelho","esqueçam","esquecer","esquerdão","estabilidade","estadista","estadual","estao","estaremos","estariam","estariamos","estatal","estelionato","estoque","estreia","estupidez","evangélica","exceções","excessivos","excrescência","existiu","expediente","explicações","explicada","explicado","explode","exposed","exteriores","factoides","fakes","falácias","falamos","falarem","fale","falsas","faltar","familiares","fanatismo","faturados","fazerem","fechamento","fechando","federativa","fenômeno","fera","ffaa","ficando","ficará","ficarem","ficaria","ficava","fiéis","filipe","filme","financeiro","fios","fiquem","fiscalizar","física","fisiológico","fizemos","flavio","focar","fodam","fode","foder","foraguedes","foramourão","formar","frio","fulano","fumaça","furada","gabarito","gabriel","gadão","galinha","ganhei","garganta","garoto","gastando","generaiss","gerações","gerar","goma","gostam","governamental","grana","grandeza","gratidão","grosseira","guarda","guri","hamilton","hashtag","havan","histeria","homofobia","homofóbico","honra","hugo","hulk","ideológica","idoso","ignorantes","imagine","impede","impedir","imperialismo","imposto","impressa","imunidade","imunização","inadmissível","inclui","incomodam","indica","indignação","indignados","indústria","ineficaz","infantil","infinitamente","influência","informada","iniciativa","insanidade","insignificância","instituição","integra","intenção","inúmeras","inutilidade","invasão","inventou","investigando","investigue","iogurte","irei","iriam","ironiza","irresponsabilidade","irresponsável","itamaraty","jairbolsonaro","jantar","joice","jornalecos","joselito","judiciário","juízes","jumentos","jump","justificam","kertzman","kkkkkkkkkkkkkkkkkk","lacradores","lacrolândia","ladrões","lagostas","lamenta","lamento","lástima","laura","legado","leis","leites","lembrado","lembram","lembre","levado","levam","levantando","liberação","lição","ligações","ligadas","ligado","ligados","ligando","ligo","lima","linguajar","liturgia","local","lote","louzada","luiz","luizselva","luladrão","luteranos","maconha","macri","maduro","maiores","malandro","maldito","malucos","mama","mamar","manchetes","manga","mapa","maravilhosa","maravilhoso","mário","marketing","martins","masi","mato","médica","medíocre","melhora","melhores","mendes","mentirosas","meteu","metodistas","micheque","mídias","milagre","milho","milícias","militou","minhacoreobrasil","minoria","minorias","miriam","moeda","mole","momentos","montagem","morar","morro","mudam","multimídia","muros","música","nasce","nassif","nazista","necessárias","negou","nervoso","nessas","netanyahu","normais","novas","novidade","number","observando","observo","odeiam","odiar","ofensa","ofensas","óleo","olho","oportunidade","oportunistas","ordens","ouvido","ovacionado","pacífico","padrão","pagina","panela","panelaço","paralelo","paraná","paredão","pária","parlamentar","participação","participando","participante","partiu","patética","patético","patifaria","patrões","paulista","peça","pegue","percebi","perderam","perfis","perguntando","perguntas","pesada","pesadelo","pica","picaretagem","pingos","plantou","pobreza","poderá","poderoso","podres","politicagem","politicamente","politico","populares","porca","porcaria","porq","portas","portuguesa","possamos","possíveis","postagens","posts","pote","pras","prato","precedentes","prefeita","pregarem","prejudicar","prepare","preparo","pres","presa","presença","prestando","preta","previsto","primeiramente","primeiros","prior","privatização","processar","produção","produz","professora","promoveu","proposta","propostas","proteção","protestar","protesto","provocando","próximos","publica","publicações","publicar","puder","pulso","puro","putas","putin","puxando","quadrilha","quadrilheiro","quão","quarentena","quartéis","quartel","quarto","quebrar","queima","querobolsonaroate","questionado","questionar","questões","rabos","raça","racismo","rainha","rápida","rato","reacionário","rebate","rebater","recebe","recibo","reclama","recomendou","recusou","reduz","reduzir","reflexo","reforçam","regime","reis","religião","renda","repercussão","repetidamente","repita","reportagens","repudiando","reserva","resistenciadias","respeitando","responsabilizar","restaurou","resume","retardados","retirada","retirar","retorno","retrato","reverter","revoltante","ricardo","rigor","rocha","roda","rolar","rolou","rouanet","rousseff","ruins","russa","sabotagem","sabotando","sacos","safada","safadeza","sala","salário","salva","salvou","sâmia","sanciinando","seco","seguem","seguida","segura","segurando","seita","senadores","sentimento","sermos","sertanejo","sete","setores","sexto","sigam","sigilo","símbolo","simula","sobe","sobremesa","sobrevivência","sofrerá","soja","soldados","soltar","solução","some","soube","subir","subiu","suficientes","sugiro","superar","superfaturamentos","surfou","surpreso","suspeição","suspeitos","sustenta","sustentam","tacando","tantas","tara","tbem","telefone","temporada","terminar","terrorismo","teta","tiozão","tirá","tiraram","título","tocar","todospelasvacinas","tome","torcida","torna","tornou","trai","traidores","transformam","transparente","traria","tributária","trilhão","trinta","troféu","tube","tuíte","turminha","tweet","últimas","unica","unida","universidade","universo","vacinado","vacinou","vaga","vagabunda","valer","vaza","vazia","vdevazadoria","vera","verão","verdades","veteranoß","vibe","vier","vieram","viih","virando","vistos","vivemos","vovó","vozes","vtnc","vulneráveis","walker","youtuber","zema","zerou","abaixo","abandonado","abandonando","abençoe","aberração","aberrações","abertamente","aberto","abin","abismo","abra","abraça","abraçados","abraçar","abraji","abreu","abril","abrindo","absoluta","absoluto","absurdamente","absurdas","abusar","acabamos","acabando","acabe","acabo","academia","acéfalo","aceitam","aceno","acertar","acertou","acharem","achava","achem","acionado","acompanho","acompanhou","acordar","acostumado","acostumando","acreditando","acusadores","acusou","adestrados","adivinha","admita","adoçando","adversários","advogados","afetando","afirmando","agendas","agente","agentes","aglomera","aglomerado","agradecemos","agradecendo","agradecer","agrária","agropecuária","aguarda","aguarde","aguentem","aiai","ainnnnn","ajudamos","ajudando","ajudarem","ajudaria","ajudava","ajudei","alckmin","álcool","aleatórios","alecrim","alega","algazarra","aliada","aliena","alimentício","alinhados","almoça","aluno","amada","amam","amapá","amarga","ambição","ambiental","ameaçando","ameaçar","amizade","amomeupresidente","amooo","analisando","análises","andamento","andava","andré","angela","anormal","anosdedestruição","antagoniza","antecessores","anticorrupção","antiga","antigamente","anular","anuncia","anunciar","apaixonado","apanhando","apanhar","aparelhada","apelamos","apequenados","apertar","apertaram","aplaude","aplaudi","aplicar","apoiados","aposentadoria","aprende","aprendemos","aprendi","apresentando","aprovadas","aprovado","aquiles","areia","ariana","armações","armado","armando","arminha","arranjou","arrasta","arrependo","arrogante","arroz","arruaceiro","arrumar","arrumo","asneiras","assaltaram","assassina","assinado","assinam","associação","assumo","assustado","atacados","atende","atentados","atestado","ateu","ativa","ativo","através","atrocidades","atualizar","atualmente","atuam","auge","aumentar","aumentarem","autenticidade","automaticamente","autoria","autoridade","autoritarismo","avaazpeloimpeachment","avalia","avisado","avisando","avisem","avon","baba","babando","bagulho","bairro","bajuladores","banalização","bancando","bancar","bancos","bandos","banho","barato","barbaridades","barca","barquinho","barrinha","barros","barulho","baseado","básico","bata","beneficência","beneficiam","benjamin","bens","bergamo","besteira","bezerra","bilionário","bill","biomas","birolilo","blindar","bloco","blogueira","bloquear","bloqueou","blusa","boazinha","bobeira","bode","boghossian","boicota","boicote","boicotou","bolacha","bolsoasno","bolsonaroaate","bolsonarocondensadoate","bonfim","bonitas","bons","bostas","botou","braçada","bravo","brazil","brigadeirão","brigadeiros","brigando","brincando","brothers","brutal","buáááá","buceta","bueiro","bula","bundão","buscar","cabelinho","cabrini","cachaça","cachaceiro","cadastra","cadastro","cadelinha","cagou","caipira","calado","calados","calam","calcanhar","calcinha","cama","cambada","caminhões","camisa","camiseta","campanhas","canadá","cansado","cansei","canta","cantando","cantora","capacita","capacitados","capeta","caratismo","carrd","carrego","carreira","carrinho","carteira","cartões","cassa","cassado","castro","catar","catastrófico","caterva","católicas","causo","cavalo","cega","ceitec","cela","censo","censuraram","centavos","certos","cestas","chamaram","chamo","chanceler","chanchada","chantagem","charge","checamourão","chegam","chegará","chegaram","cheguei","cheiram","cheirinho","chinelas","chineses","choca","chocada","choni","chumbo","chupar","chuparia","chutado","cidadã","cidades","cínicos","circo","cismo","citando","citou","civilidade","clube","cnbb","cobrado","cobram","cobrando","cobrem","cobrou","cocô","coerente","coisaaa","coitadinha","colega","coleta","coletivo","colhe","colocado","comandar","comandos","combina","começam","comecei","comentaram","cometer","cometido","compara","comparado","compartilhar","compartilhe","competência","competente","competir","compõem","comporta","compradas","comprasse","comprimidos","comunidades","comuns","concessão","concluir","concordam","condesado","conferência","confiram","confirma","confissão","conflito","conforma","conformado","conforto","confundiu","confuso","conheça","conhecereis","conivente","coniventes","conjunto","connection","conscientização","conseguirão","conseguiria","consensado","conserva","consiste","consolida","constrangimento","construindo","construir","consumindo","contaminação","contamos","contando","contaria","conter","contido","contigo","continuam","continuamos","continuarão","continuo","conto","contradiz","contratadas","convenção","conveniente","conversando","convida","convite","coordenadora","cópia","copycat","corações","coro","corona","coronel","corporativos","corrente","corresponsal","corretamente","correu","corrompida","cortes","costa","cotovelos","cova","cpidoleitecondensado","crápulas","crasso","crente","crentes","crescimento","criadas","criam","criei","criminalizar","criticam","criticando","criticas","critiquei","crônica","cronológica","cruz","culll","cultural","cunha","curitiba","cuspir","custar","daciolo","dada","dallagnol","dança","dará","debates","debi","debocha","decadência","decentes","decepção","decepcionado","decidiram","declarou","decretado","defenestrado","déficit","definirá","deixado","deixaria","deletarem","delete","deliberada","delinquente","deltan","democraticamente","democrático","demorou","dental","dentista","denunciado","depilado","deprimente","deputadas","deram","derivados","derrete","derretendo","derrocada","derrubado","desacreditar","desafiar","desafio","desaprovam","desarmado","desastre","desastrosa","desce","descontrolada","desculpe","desdenhando","deseja","desejam","desejaram","desejava","desenhar","desequilibrada","desequilibrado","deserto","desgosto","desgraçados","desgraças","desmate","desmentida","desmontando","desmonte","desobediência","desonesta","despreparo","desprezível","desqualificar","destempero","destinado","destroem","desvia","desviando","desviar","desviaram","desvio","determinados","determinou","detonando","deveríamos","devolver","diabos","diálogo","diarréia","diego","dieta","dificil","dificuldade","dificuldades","dificultar","diminuir","dirceu","diretas","diretrizes","dirigir","discordar","discordo","discute","discutindo","discutir","disparado","disseminação","disseminar","disseram","dissimulado","disto","distorcida","distribuição","distribuídas","distribuídos","diverte","dividida","divisão","doentio","dolo","domésticos","donos","doriana","dormindo","doutrinador","drogado","duradouro","dureza","economista","editais","edson","efetivos","eficiente","egressos","elege","elegi","eleita","elites","elogia","elogio","elogiou","emana","embasa","emoji","empreendedorismo","empregado","empresários","enche","encomendada","encontre","encontrei","encontrou","endividamento","energumenos","enfiando","enfiaram","enfraquecer","enfrentando","enfrentar","engajamento","engasgado","engorda","engraçadinho","enquadrado","enriquecer","ensinando","entendem","enterrado","entrando","entregam","entregas","entregou","entregue","entusiasmo","envergadura","enviar","envio","envolvem","envolvendo","enxergar","epidemia","episodio","erramos","ervilha","escancarado","escancarados","escandaloso","escárnio","esclarecimento","escolheram","escolhidos","esconde","escondido","escova","escreve","escrever","escreveu","escrotos","esfaqueado","espalha","espalhados","espalhou","espanha","espantar","especialistas","especulando","esperando","esperneando","esporádicas","esquecendo","esqueceram","esquecido","esquerdalhas","esquerdaquerbolsonaroate","estaduais","estagiário","estarem","estaríamos","estela","estoucomcirogomes","estrada","estragou","estrangeiros","estratégias","estratégica","estuda","estudantes","estúpida","estúpido","eterna","eterno","eutanásia","evangelho","evangélico","eventual","evolui","evoluir","exaltou","exame","exceção","excesso","exceto","exclusiva","execução","exibir","existência","existentes","existia","experiência","expiatório","explicando","explicou","expressa","expressar","extremo","exxocet","fábrica","fabricar","fachada","facista","factoide","fada","faeddo","faixa","faixas","falado","falaram","falaria","falariam","falida","falido","falsa","faltaria","faltava","fama","fanáticos","fandom","fará","fariseu","faturou","favoritos","fechadas","fechadocombolsonaro","fechadoscombolsonarosempre","fecham","feitas","felizes","festas","festinha","fetiche","fetiches","feto","fezes","ficado","ficamos","ficaram","filhão","filhas","filiada","financeira","financiar","fines","fingir","fingiu","fixação","flamengo","flora","florestal","follobackforfolloback","follome","fonte","forabolsonaropelobrasil","forçando","formação","formado","fornecedores","fornecimento","fracasso","fraco","frágil","frança","fraudada","freitas","freixo","fria","frios","frouxo","frustrado","frustrados","frutos","fudidos","fugindo","fugir","função","funcionam","funk","fura","furando","furo","futuras","gabriela","galão","galo","galvão","garantia","garantias","garantiu","garanto","garcia","gastança","gavassi","gazeta","geladeira","generalizada","gênio","gerais","gerou","gestões","gigante","globalistas","globoplay","godzilla","golpistas","gordinho","gordo","gospel","gostando","gostaram","gostaria","gostariam","gostava","gotinha","governamentais","governando","gráfico","gratuita","grau","graves","grelo","gritam","gritou","grobo","grosseiro","grosserias","grotesca","guilherme","guinness","guru","habitantes","hábito","haha","hahahahaha","hang","hasselman","haveria","hehehe","heim","henrique","hipótese","históricos","hoffmann","holocausto","homenageou","honesta","honrar","horror","horrores","horrorizados","hospital","hotel","humanos","humilde","humilhar","humoristas","icms","ícone","ideias","identidade","identificou","idolatria","ídolo","idosa","igualar","iludiu","imaginários","imaginei","imaginou","imenso","impacto","impera","implacável","implorando","impor","importam","importar","imprensalha","imprensalixo","improbidade","imundos","inapto","incentiva","incentivou","incluem","incomodar","inconcebível","incorruptível","indefensável","independência","indiana","indícios","indicou","indigno","indiretamente","indivíduo","ineficazes","inelegível","inépcia","inescrupulosos","infectadas","infelicidade","infeliz","infernos","infiltrado","influencia","influenciando","informado","inglaterra","ingressou","iniciar","iniciaram","inimputável","inquirir","insano","insatisfação","insensível","insistiram","instabilidade","instalar","insuportável","intacto","integrantes","intenções","interessados","interferiu","intern","internacionais","intervalo","inventam","inventaram","inverter","investidas","investidos","investigações","iphone","ironia","irregularidades","irritou","isentar","itens","jaircondensadoaté","jamile","jogada","jogadas","jornaleco","jornalística","josias","judicial","julgado","juliette","jungkook","junho","juntou","jura","jurista","justificando","justificou","juventude","karma","kids","kkkkkkkkkkkkk","kkkkkkkkkkkkkk","kkkkkkkkkkkkkkkkkkkkk","kkkkkkkkkkkkkkkkkkkkkkkkk","lacrosfera","ladeira","ladrao","lagosta","laia","lambe","lambuja","lambuza","lambuzando","lança","landim","larápio","larga","largou","lascado","latif","latina","latino","lebre","left","legais","legislativas","legítimo","leitinho","leitos","leitura","lema","lembrando","lembrem","lembrou","lendo","levantamento","libera","liberadas","liberando","libertar","libertará","lições","lideranças","lideres","lido","likes","limbo","liminar","livres","locais","lógico","logística","loja","lorotas","louvor","lugares","lulinha","lunático","lutem","luxo","machismo","macho","macrom","madeira","madrugada","magnitude","mainardi","maisa","major","malabarismo","malditos","maligna","malvadão","mamando","mamatas","mamou","mana","manchete","mandado","mandrião","manhattan","manifestantes","manipula","manipuladora","mantém","mantendo","mantido","manu","manutenção","maravilha","marcelo","marcos","marcou","margem","marginal","marinho","marinhos","marmanjo","marques","marreco","masca","matado","mataria","material","matérias","mbti","medíocres","meias","melhorou","melina","mello","membro","membros","mensagens","mentecapto","mentem","mercadinho","merecer","miami","michele","milicia","miliciana","milionárias","milionário","militando","minionsalienados","ministerial","minutinhos","minuto","miséria","missa","mitodecuérôla","mitooo","mitoooo","mitos","mitou","modernização","molho","mônica","montanha","montes","mora","moralmente","morder","morra","morrerem","morressem","morta","mortal","mortas","movimentações","mtst","mufasa","mugindo","mula","multa","muro","nadando","naipe","namorar","nariz","natura","natureza","necessário","negligenciou","negocia","negociar","negra","negras","negros","nela","nemocovas","neoliberal","neoliberalismo","nervosinha","nestes","netflix","netinho","nicolás","ninguemderrubabolsonaro","níveis","noblat","nobre","nobreza","nojenta","nomes","normalidade","normalizada","normalmente","notas","notinhas","obedece","óbitos","obras","obriga","obrigatoriedade","obter","ocupa","ocupam","odiando","odiei","odio","odir","ofendendo","oferecer","oferta","oficiais","oito","oitocentos","olhou","olímpio","omitir","ongs","oportunidades","oportunista","opositores","optou","organizações","organizada","orgulhosa","ostensiva","ostra","oswaldo","ótimos","outdoor","outdoors","ouve","overdose","pacote","padres","pagaram","pagasse","página","palacianos","palma","palmeiras","palminhas","pamonha","pança","pânico","panificadora","papas","parado","paraquedas","parcial","parecem","parente","pariram","paris","paródia","parto","pasmem","passador","passeata","passeios","passos","pasta","patente","patéticos","patrimônio","patriotismo","paulson","pavão","pedi","pediram","pedro","peidando","peludo","pensamentos","pensamos","pensava","penteado","pequenas","pera","percebam","percebe","percebem","perceberam","percebo","perdão","perdem","perderem","perdi","perdida","perdidos","perdoa","pereira","perigo","permanece","permitir","permitirá","pernas","pertence","perverso","pesado","pêsames","péssima","péssimo","pessoalmente","petição","piadas","pietro","pinto","pintou","pipa","piroca","placar","planeja","planejamento","planta","platéia","plenário","plmds","podendo","poderiam","poderíamos","podiam","poisé","polarização","policial","políticas","ponta","ponte","pontes","pontos","porco","porem","pornô","porquinho","porteira","português","porventura","posicionamento","posicionar","possibilitou","possivelmente","possui","postei","posto","postou","potencial","poupado","poupem","povinho","pratica","prazer","precisão","precisaria","precisasse","precisou","preconceito","prefeitos","prefeitura","preguiça","prêmio","prender","preocupados","preparem","presidênte","presídios","presidir","pressões","prestes","pretende","prezado","princípio","prints","prioritários","privadas","processos","produzindo","produziram","profetas","profetizou","profissão","profissional","profundo","prol","promover","pronunciou","propagação","proporção","proselitismo","prostituta","protagonista","protestantes","protestos","protocolamos","protocolar","protocolo","provado","provável","provocar","psiquiatra","psolista","ptezada","pudesse","punição","punido","puteiro","puxadinho","qnts","quadro","quadros","qualé","quanta","queira","queixo","quieto","rachadinhas","raciocínio","ranking","rapidamente","raras","raro","rastro","ratazana","ratinho","ratos","reality","realizar","recadinho","recalque","recebem","recebendo","recebia","receitar","recheio","recife","recomenda","reconhece","reconhecer","reconheço","record","recorrer","recuperação","recusar","reddy","redesenhando","redetv","reduziu","refém","referir","reflete","reflexão","refutar","região","registrada","renan","renato","renner","renovação","renovou","renuncie","repassem","repete","repetidas","repito","representam","representando","representante","representar","representou","republicana","resiste","resistência","resolvido","respeitar","respostas","ressaltar","ressentidos","restam","resumiu","retirado","retirou","reto","retórica","retórico","retrata","retrocesso","retuitem","reunidos","reuniram","reuniu","réus","revelado","revelou","revoltado","rica","rider","ridicularizada","risadas","rita","rivalizar","rmilhões","robozinho","roça","rodapé","rodar","rodolffo","rodrigues","roleta","rombo","rosé","roubada","roubados","roubam","roubos","rsrsrs","sabedoria","sabíamos","sábio","sabotou","saem","safados","sairia","salada","salvador","salve","salvo","sanitárias","sanitário","santiago","santistas","sarcasmo","sarita","sarney","sarro","satisfeito","secom","secretaria","secreto","século","seguidas","seguintes","seguisse","segundamente","selar","selena","seletiva","semelhantes","sensata","sensibilidade","senti","sentindo","sequelas","sergipe","seriedade","seringa","servem","serviço","serviços","sessenta","setor","sexual","shows","siglas","silas","silvio","simpatizante","sinais","sinceridade","síndrome","síntese","sobrar","sobrenome","sobreviver","soco","sofrendo","soldado","solidário","solta","soltando","soltei","sombra","somostodosbolsonaro","sonar","sonham","sonhar","sonoro","sorrindo","soucristaoenaosoubolsonaro","souza","stella","stop","subindo","submisso","sufocado","sugeriu","sujos","superfaturou","superficialidade","supostos","suresh","surta","suspeitas","taehyung","tals","tamo","tampouco","tanque","taokei","tapa","tbém","teles","telhado","telões","teme","tempestade","tentado","tentei","teram","terceiramente","termos","terrível","terror","tese","testamento","tido","tiktok","timeline","tiozao","tipos","tiramos","tixa","tlgd","toba","todinho","todoscombolsonaro","tolerância","tomara","tomasse","torcer","tornasse","tornozeleira","tosca","trabalhava","trabalhe","tradicional","trágico","tramar","tramitação","tranquilidade","tranquilo","trans","transformou","transmissão","transparentes","traste","tratado","tratamentos","travesti","trazer","trecho","tremendo","trevas","triplo","tristeza","trocar","trocou","tropas","trupe","tumultuar","tweets","twuitter","uber","ufmg","ultrapassou","unfollow","unico","unificada","universalização","universitário","urna","urubus","usado","usados","útil","utilizado","utis","vaca","vais","vamo","vandaliza","vantagem","variante","variar","vazou","vegano","veiga","vendas","venderam","venho","vento","ventre","vereadores","veremos","vergonhice","vergonhosa","verificação","versão","véspera","vestidos","viável","víboras","vide","viés","vinte","violenta","violento","viraram","virei","virus","visitar","vitalício","vitimiza","vitor","viúva","viveu","vivi","viviane","vladimir","voice","volume","vossos","votam","votarem","votava","votem","vulgar","wallace","wilson","zambelli","zeina","zoar","zombar","aaaaaaaaaaa","aaentiras","aahhhhhh","abaixar","abaixou","abandoná","abandonadas","abandonados","abandonou","abastecem","abasteceu","abçs","abertos","abocanhar","abomina","abominação","abordados","abordar","abraços","abraçou","abraham","abram","abrasco","abrem","abridor","abrirão","abro","absolver","abster","abusado","abusivo","abusivos","acabam","acaboubde","acachapante","academias","academico","açai","acalme","acalmem","acampar","acatou","acéfala","acéfalos","aceitando","aceitaram","aceitável","aceitem","aceitemmeuvoto","aceito","acelerou","acena","acendeu","acendida","acepipe","acerta","acerto","acertos","acervo","acessíveis","achado","achamos","achasse","achatamento","achavam","achincalhou","acidente","acionar","acione","acionista","acirramento","acobertaram","acolá","acompanhadas","acompanhado","acompanhamento","acompanhe","acontecerá","aconteceria","acontecimento","acordam","acórdão","acordaram","acorde","acordei","acordem","acordos","acostumar","acostumou","acovarde","acreditamos","acreditarem","acreditava","acredite","acreditei","acrescentando","actionaid","acuada","açúcar","acuda","acúmulo","acusá","acusam","adaptae","adélio","adentrar","adepto","adeptos","aderiram","adeus","adiante","adicionais","admira","admiram","admiramos","admiro","admitem","admitir","admitiu","adoça","adoece","adolescentes","adoração","adorando","adoraria","adorava","adormecida","adormecido","adorooo","adorou","adotado","adquiridas","adquirir","adriano","adula","adulto","advertida","advogada","advogado","aeee","aeeeeeeeee","aeeeeeeeeeee","aeronave","aeroporto","afastando","afastar","afeganistão","aferindo","aferir","afeta","afetam","afetar","afetará","afetou","affs","afins","afirmará","afogando","afora","afrente","afundado","agarradinho","agarrado","agarrar","agendou","agia","agiu","aglomerada","aglomeram","aglomeramdo","agnus","agoniza","agrada","agradaria","agradeça","agradecido","agradeço","agrado","agrava","agredir","agrediu","agressão","agressões","agripino","agrotóxicos","agrupamento","aguardava","aguardavam","aguas","aguentam","aguentando","aguentariam","aguentava","aguente","aguentou","aguerra","agulhas","ahahhhahahhahahhahahahhahah","aham","ahauhauahauahaua","ahhhhhh","ahhnn","aires","ajoelha","ajoelhava","ajudá","ajudaaa","ajudam","ajudasse","alagoano","alastrar","alcançando","alcançar","alcançou","alcool","alcooumbre","aldeias","aleatorio","aleatório","alegam","alegando","alegre","alegríssimo","alemanha","alemão","alencar","alertando","alertou","alexa","alexander","alfinetado","algm","alia","aliancapelobrasil","alias","aliassem","alienação","alighieri","alilmentos","alimentícios","alimentou","alinhada","alinharam","aliou","alive","aliviado","aliviar","alivio","almas","almeida","almoçando","almoçava","almofadinha","aloh","alôooooo","aloprado","alou","altas","alternativa","alternativo","altíssimo","alturas","alucinado","aluga","àlvaro","alvoroço","alvos","amaa","amadobatista","amamos","amando","amanha","amansar","amante","amardas","amargamente","amargo","amarra","amarrar","amava","amazona","ambientalistas","âmbito","ambulante","ameaçado","ameaças","ameiii","amém","amenizar","americano","americanos","amistosa","amontoado","amoooo","amoooor","amore","ampliou","amplo","anacrônico","anais","analfabeta","analfabeto","analisada","analisar","andante","andaram","andarem","andas","anedota","aneira","anéis","anexar","angu","ângulo","aníbal","anifestações","animado","aniquilar","anistia","anita","anjo","anjos","anne","anota","anotem","ânsia","ansioso","anta","antagonistas","antebraço","antecipa","antecipação","antecipando","antecipar","anteciparam","antevia","antibióticos","antidemocrático","antidemocráticos","antídoto","antigo","antimaláricas","antipetismo","antiprivilegio","antítese","anual","anula","anulam","anunciadas","anunciam","anunciaram","anúncios","anunciou","anuscida","aomine","aovivo","apadrinhados","apagado","apagão","apagassem","apagou","apague","apaixonada","apaixonados","apaixonam","apaniguados","aparecem","apareceria","aparecia","aparelhando","aparelhar","aparelhou","aparente","aparentemente","apartai","apartamento","apartidário","apatridas","apelando","apelar","apelido","aperitivos","apertou","apex","apitou","aplauda","aplaudem","aplaudido","aplaudiu","aplausos","aplica","aplicação","aplicativo","aplicou","apocalíptico","apodrece","apodrecendo","apóia","apoiarem","apoiaria","apoiasse","apoiava","apoiavam","apologia","apontados","apontamos","aposta","apostam","apostar","apostólicos","apostou","apreende","aprenda","aprendido","apresentaremos","apresentava","apresentou","aprofunda","apromessa","apropriada","apropriaram","aprovada","aprovados","aprovando","aprovasse","aprovassemos","aproveitador","aproveitando","aproveitar","aproveito","aprovem","aproxima","aproximadamente","aproximaria","apuraram","apurem","aquecer","aratu","araujo","arauto","area","área","argumente","aristocracia","aristóteles","armad","armada","armazenado","armazenamento","army","aromatizada","arquivamento","arquivo","arquivos","arranca","arrancando","arrancar","arranjados","arranjar","arranjaram","arrasando","arrecadou","arregaçava","arreganhamento","arregona","arregou","arrematado","arrepende","arrependi","arrested","arroba","arrochar","arroyo","arruaças","arruinados","arrumando","arrumaram","arte","arteb","arthurliranao","arthurliranão","arthurlirasim","articulação","articulistas","artista","árvore","ascenção","ascensão","ascenso","asco","ascom","asfalto","asfixiadas","aspas","aspirante","asqueroso","assalariado","assaltado","assaltam","assaltar","assalto","assassinados","assassinar","assassinato","assassinou","assembleia","assenhorar","assentou","assessora","assessores","assiduidade","assinatura","assistiu","associado","associar","assombrado","assombroso","asssimmm","assumi","assumidamente","assumidos","assustar","assustavam","assustou","astra","astral","astrólogo","atacam","atacaram","atacava","atalhos","atar","atendeu","atentos","atenuar","aterrorizante","ateus","atinge","atingidos","atingindo","atingiu","atira","atire","atirei","atirou","atititudes","ativar","ative","atividades","atoa","atolada","atores","atrapalhada","atrapalhando","atrapalhar","atrapalhou","atrasada","atraso","atrasou","atrelado","atribui","atribuído","atribuir","atribuiu","atritos","attuch","atuado","atuando","atuar","atuou","atura","aturar","aturdido","audiência","audio","auditoria","aumentam","aumentativo","aura","autêntico","autobiografia","autogolpe","autointitula","autonomia","autoritária","autoritário","autorização","autorizado","autosuficiente","auxiliando","auxiliar","auxiliares","aval","avalanche","avaliar","avanços","avante","aviltada","aviltante","avisava","avisei","avisou","avistada","avistam","avonts","awakegiantsbrasil","azedando","azedo","azeitona","azitromicina","azulejo","babacas","babaquise","baboseiras","bacana","bactéria","bactérias","badaladas","baden","bafo","bagatela","bagrei","baiana","baioneta","bairros","bait","baixando","baixarem","baixas","baixeza","baixos","bajulado","bajulador","balança","baliza","ball","banalidade","banana","bananas","bancada","band","banda","bandeado","bandeira","bandeirantes","bandeiras","bandidaço","bandidolatras","banqueiro","banquete","baque","baralho","barbie","barbudo","bares","barquinhospersonalizados","barquinhostemáticos","barrabás","barraca","barrar","barras","barreira","barreto","barriga","barroso","basear","bastam","bastião","bastidores","batam","batedor","batiam","batida","batizar","batizou","batoré","bauruense","bbbb","bbbfesta","bbbs","beato","beatriz","bebendo","beber","bebês","bebida","bebis","bebo","bedel","beijar","beijei","beijinho","belisca","belíssimo","belo","beltrão","beneficia","beneficiado","benefíciados","beneficiando","beneficiar","beneficie","benny","benzinho","beócios","berço","berdimuhamedow","berlusconi","berrando","berrante","berraram","berros","bestas","besteiras","betto","bezerros","bibi","bíblia","bíblica","bibo","bichinha","bicicleta","bidenchinadoll","biel","bife","bigode","bike","bilionária","bipolar","biquíni","birra","biscoitos","bixo","bixona","bizarros","blabla","black","blackpink","blend","blessed","blindagem","blinders","blog","blogs","bloqueando","bloqueiam","blsminon","boany","boato","bobagem","bobões","boçalidade","boçalnazi","bocão","bocas","boiadeiro","boicotado","bojack","bokuto","bolachas","boldonaro","boleia","boletim","bolhas","bolsoafetivo","bolsoescória","bolsolulismo","bolsominia","bolsominionnnn","bolsominios","bolsomonion","bolsomorista","bolsonare","bolsonaroarmagolpe","bolsonarocorrupto","bolsonaromelhorpresidentedobrasil","bolsonaromentiroso","bolsonaronopatriabook","bolsonaropirupequeno","bolsonaroreeleito","bolsonaros","bolsonarováprapqp","bolsonauro","bolsopata","bolspnaro","bolsy","bolzonaro","bombas","bombástico","bombooclat","bonde","boné","boneca","bonfin","boninho","bonita","bonzim","bonzinho","bopp","boquete","boquinha","boquinhas","borbadeados","borel","boris","borrada","boruto","bossal","bostinha","botafogo","botando","botasse","bote","boteco","botequeiro","botões","boza","bozolândia","bozorico","brabo","braços","brados","branca","brasileirão","brasilexigeimpeachment","brasilia","bravatas","breaking","brejo","brenda","bresser","brevemente","breves","brigar","brigas","brigou","brilha","brilhante","brilhar","brinca","brincadeiras","brincou","brindeiros","britto","brocha","bronca","broxou","brum","bruta","bubbaloo","buchudo","bueller","buenos","bufão","burras","burrro","buscam","buscas","butantã","cabeças","cabeceira","cabeleireiro","cabem","caber","cabo","cabra","caçar","cacete","cachorros","caem","cafajeste","cafécomboulos","caga","cagação","cagado","cagalhães","cagão","cagar","caguei","caía","caiam","caibres","caíram","calabresa","calada","caladinha","caladinho","calçada","calças","calculista","cálculo","cálculos","calhorda","calhordice","calo","calor","calúnia","caluniar","calúnias","camarada","câmaradosdeputados","camelô","câmera","caminhada","caminham","caminharia","caminhos","camioneiros","campainha","campello","campeões","cana","canais","canalhada","canalhices","canavial","cancelou","candidata","candidatou","canditado","candyshop","caneco","cangaciro","canhalhice","canhota","canhotas","canhotos","caninha","cano","cansadas","cansados","canso","cantanhede","cantilena","cantou","canudos","caótica","capa","capachos","capazes","capitalismo","capitania","capitao","capitólio","capítulo","capítulos","capitulou","captação","captou","caraca","caracter","características","caraioooo","caralhoo","caralhooo","carapuça","carapuças","carcerário","carcomido","cardoso","carentes","carestia","cargueiros","carguinhos","caribenho","carícias","caridade","carinho","cariocas","carlinhos","carlo","carminha","carnavalesco","caroço","carona","carreataforabolsonaro","carrega","carregue","carreras","carreta","carretinha","carrie","carros","cartacapital","cartao","cartaz","carteiras","cartinhas","cartucho","casaderuibarbosa","casal","casando","caseiro","cassaachapatse","cassar","cassiano","cassio","casta","catastrófica","cátedra","cativo","católico","cauda","causada","causado","causando","causasse","causava","cavar","ceará","cedida","cegaaaaaaaaaasssss","ceilândia","ceivella","celebração","celebrada","celebrando","celebrar","celerado","celso","cemitério","cenários","ceninha","censores","censurando","censuras","centavo","centenário","centenas","central","centralizado","cepedisa","cercando","cercear","cerco","cerebral","cerrado","certamente","certeira","certezas","certificar","certinha","cervejinha","césar","chacoalhada","chacoalhar","chacoalhei","chacotas","chacra","chagam","chamá","chamadas","chamarem","champagne","chão","charlatanismo","chateados","chatice","chatos","chatossss","checador","checadores","checar","check","checking","chef","chefão","chegaremos","chegasse","cheios","cheira","cheirando","cheques","chernobyl","chiapanno","chibata","chicletão","chiclets","chico","chifre","chilena","chileno","chiliquento","chinadólia","chinela","chinesas","chinfrim","chingando","chioro","chip","chips","chocando","chocante","chocar","chocolates","choices","choiz","choradeira","choram","chorem","choremos","chororô","chorume","chover","chuchu","chupador","chupando","chupou","churras","chuto","chutou","chuuuuuuupa","chuva","ciano","cíclico","cida","ciências","cientificamente","científicas","cigarra","cigarrinho","cilindro","cinema","cintrario","cirandeiros","circula","circulam","circularam","cirogomesavisou","cirúrgicas","cisne","cita","citações","citado","citam","citar","citavam","cítio","ciumes","ciúmes","cível","civilizado","clandestinamente","claquete","claramente","clareza","clarice","claros","classificam","claudio","clica","clientes","clímax","clipe","club","coaf","coautores","cobaias","coberturas","cobranças","cobrarem","cobravam","cobre","cobro","cocaína","coco","codigo","coelhos","coerência","cofis","cogitar","coincidentemente","coisaa","coisaaaa","coisaaaaa","coisaaaaaa","coisaaaaaaa","coisaaaaaaaaaa","coiso","coitadinho","coitado","coitados","colaboração","colaborar","colar","colaterais","colateral","coleciona","colégio","colégios","coleguinha","colérico","colgate","colheitas","colhendo","colherá","cólicas","colida","colo","colocarão","colocassem","coloco","colou","comandado","comandados","comandante","comandantes","combatente","combateu","combinação","combinado","combinar","combolsonaroaté","combustíveis","combustível","começando","começarem","comece","comecem","comem","comemoração","comemoram","comemoraria","comemore","comemoro","comemorou","comentando","comentarios","comeptente","comerciais","comercializado","comerciantes","comércios","comes","comete","cometem","cometendo","cometi","comidas","comido","comissão","comissionados","comissões","comitê","compactua","compactuando","compactuar","compactue","companhia","compararia","compare","comparecer","comparsa","compartilhadas","compartilhando","compartilhem","compartilhou","compatível","compensado","competição","completar","completíssimo","complicada","componente","compôs","composta","compostura","comprá","compração","compraram","comprarem","compraria","compreende","compreensivo","comprometedora","comprometeu","comprometida","comprometido","comprometidos","comprovada","comprovadamente","comprovados","comprovante","comprove","comprovou","compulsivo","computadas","comseguem","comunas","comunicaçao","comunitário","conceitual","concentração","concentrado","concentrar","concepção","conchavos","conciliação","conclamo","concluí","concluída","concluímos","concorda","concordamos","concordavam","concordei","concordoooo","concordou","concorrente","concorrer","concorreria","concretos","concursos","cond","condecorou","conden","condenados","condenando","condenar","condenaram","condenássemos","condenável","condenem","condenou","condensadão","condensar","condesaso","condessado","condizem","condutas","conduto","conduzido","conduzir","conectas","conection","confeitaria","confere","conferir","confessa","confessar","confessaram","confesso","confia","confiado","confiar","confiaria","confiáveis","confie","configuração","configurará","confirmando","confirmar","confirmo","conflitos","conformam","conformo","confrontado","confundido","confundir","confusa","confusao","confusão","confusões","congelado","congestão","congressistas","congressonacional","congressopauteoimpeachment","conhecem","conhecesse","conhecida","conivência","conjunta","conká","conluio","conmebol","conosco","conquista","conquistando","consciencia","consciente","consegui","conselheira","conselheiro","consequência","consequências","consequentemente","conservadorismo","consideração","considerações","considerado","consideramos","considerar","considerava","considere","considerou","consigam","consistente","consolando","consolo","conspiracionices","conspirar","consta","constar","constatação","constitui","construçao","construção","construídos","construtiva","construtivas","consultado","consumidas","consumido","consumirão","cont","contabiliza","contabilizou","contadinha","contados","contam","contaminadas","contaminado","contaminador","contaminei","contaminou","conte","contenção","contente","conterrâneo","conteste","contigente","contingenciamento","contingenciar","contínua","continuarei","continuarem","continuaria","contorcendo","contornar","contradição","contradições","contraditório","contragosto","contraponto","contrapor","contrariasse","contratar","contrato","contratou","contratualizado","contribuído","contribuindo","contribuir","contribuiu","controladoria","controlando","contumaz","contundente","convenceram","convencia","convencimento","convênios","conversadora","conversamos","conversinha","converso","conversou","converterão","converteu","convicto","convidá","convidada","convidado","convidados","convidar","convidaram","convidaria","convivas","convivem","convivência","convivente","conviver","conviveu","convocarem","cooll","coosa","copiou","coquinho","coranavirus","corinthiano","coroa","coronavirus","coronovac","corpinho","corpos","corram","correio","correta","corrompidos","corrupções","corrupt","cortada","cositas","costuma","costumavam","costurar","costureira","cotação","coul","country","covard","covardes","covardia","coveiro","covidão","coxinhas","cpis","credit","creditar","créditos","creme","crer","cresça","crescendo","crescerá","cresceu","cretinice","crfb","criador","criadores","criados","crianca","criancisse","criando","criarão","criarmos","criatividade","criminal","criminalizada","criminalmente","crises","cristaospeloimpeachment","cristovão","critério","critérios","criticá","criticada","crítico","criz","cruéis","crush","crusoé","cruzado","cubano","cuecas","cuiabano","cuidam","cuidando","cuidassem","cujo","culatra","culhowēs","culpá","culpada","culpo","cultuou","culturem","cumeu","cumplices","cumplicidade","cumprido","cumprimento","cumprindo","cumprirem","cunhão","çuper","çupremo","cúpulas","cura","curas","curiosa","curiosamente","curiosidade","curioso","cursando","curte","curtida","curtindo","curtiram","curtiu","curvando","curvar","curvaram","cuscuzes","cuspindo","custado","custam","custando","custava","custe","custos","custou","cuuuuuu","cuzao","dacueb","daddy","dahora","dale","danada","dançando","dane","dani","danielcfreitas","danone","danos","dante","dapopulação","daquela","darling","datas","datena","davi","debaixo","debandada","debelado","debiloides","debocharam","deca","decadente","decente","decepciona","decepcionando","decepcionante","decepcionou","decepções","decidem","decisões","declama","declara","declarações","declarada","declaradamente","declaram","declarando","declararem","declarei","decorativo","decorrer","decrépito","decretos","decretou","dedicava","dedo","dedos","defasado","defecou","defeito","defeitos","defenda","defendemos","defenderem","defendidas","defendwr","defensora","defesas","deficiente","definições","definidos","definiu","degenerado","degradação","deitar","deixam","deixaremos","deixaríamos","deixava","deixei","deixo","deletei","deliberadamente","deliberado","delícia","deliciar","deliciosamente","delinquentes","delinquiu","delírio","demaissssss","demandas","demetir","demissões","demita","demite","demitidos","demitir","demo","democráticas","demonização","demonizando","demonstração","demonstrando","demora","demorando","demorar","denominação","denominações","denominam","denota","dentes","denúncia","denunciam","denunciamos","denunciando","denunciem","departamento","dependência","dependentes","depheliolopes","deploráveis","depoimento","deposto","deppis","depreciativos","depressão","deps","deputadosdiretório","deputags","derem","derramado","derrame","derrotá","derrotadas","derrotismo","derrubá","desabando","desacredita","desacreditada","desafetos","desafiado","desafiou","desaforo","desajuste","desapega","desapontamento","desarmamento","desavizadinha","desbocado","descabida","descanse","descartado","descartados","descartar","descarte","descendo","desceram","desceu","desclassificado","descolar","descompensado","descomprometido","descompromisso","descomunal","desconectado","desconfiados","desconfiança","desconfiar","desconfiaram","desconhecem","desconhecer","desconsidera","desconstrução","desconstruído","desconstruidos","desconstruir","descontrola","descontrole","descrever","descreveu","descrição","descrita","desculpado","descumprimento","desdém","deseje","desejou","desemba","desembargador","desencontradas","desenformação","desenhada","desenhei","desenho","desenterrei","desenvolvidas","desespera","desestabilizado","desestabilizar","desfarçado","desfaz","desferiu","desfilando","desfile","desflop","desflopando","desgastado","desgastante","desgaste","desgostar","desgovernar","desgraceira","desgrassa","designers","desigualdade","desindustrialização","desinformado","desinformados","desinformando","desintegre","desinteresse","desistam","desiste","desistem","desistir","desisto","deslavada","deslize","desmaia","desmascarada","desmascarando","desmediação","desmente","desmentido","desmentindo","desmiolado","desmonstra","desmontado","desmoraliza","desmoralização","desmoralizar","desmoralizaria","desnecessárias","desnorte","desobedienciaciviljá","desocupado","desocupados","desocupar","desodorante","desolador","desonrar","despedindo","despeja","despencou","despensa","desperdiçar","despolitização","déspotas","desprezado","desprezo","desprovidas","desprovido","desqualificada","desqualificados","desrespeita","desrespeitando","desrespeitar","desrespeitou","dessem","desserviço","destacados","destacar","destacará","destampar","destaque","destemperada","destilar","destinada","destratando","destratar","destroi","destrói","destrui","destruída","destruído","destruidor","desuhumano","desumanidade","desvaloriza","desvalorizar","desvencilhar","desviada","desviado","desvios","detalhada","dete","deter","deteriora","determina","determinação","detesta","detestei","detido","deturpação","deturpado","deturpando","deuses","deusssss","deussssssss","deusvult","deva","devagar","devastação","development","deves","devidas","devidos","devo","devoção","devolta","devoto","dezenas","dezoito","dhomini","diabetes","diabólico","dialogar","dialogo","diária","diatribe","diaz","dica","dicionário","dick","didática","difamá","difamação","difamando","difamar","difamatório","difamatórios","diferentes","dificilmente","digitais","digital","digno","dilatado","dilmá","dilui","diluindo","diluir","dilúvio","diminui","diminuído","dinamização","dinastia","diplomacia","diplomata","direção","direcione","diretores","dirige","disband","disciplinada","discord","discorda","discordâncias","discurs","discursar","discursinho","discussões","discutida","disfarçam","dispara","disparar","dispare","dispensado","disponibilize","disponíveis","disposição","disposto","disputar","dissesse","dissimulados","dissonância","distopia","distorça","distorceu","distorcidas","distração","distrai","distrair","distribuindo","ditado","ditadoria","ditadória","ditas","diuturnamente","divergências","diversidade","diversões","divertido","divertir","dividas","dividem","divina","divindade","divirtam","divisa","divulgada","divulgadas","divulgados","divulgue","divulguem","dizimar","djonga","dobradinha","dobro","doceria","documentário","doem","doentia","doida","doidos","dólar","doloroso","doméstica","domesticado","domésticas","domiciliar","dominado","dominar","donald","dori","dorme","dormem","dose","dota","dourado","dourados","doutrina","doutrinação","dragão","drama","dramático","drástica","drásticos","drauzio","droga","drogas","dudu","duplas","duramente","durar","duratex","durma","durmam","duros","duvidar","duvide","duvidem","duvidosas","duvidosos","dúzias","ébomjairinvestigando","eclodir","econmia","economicamente","economizando","edaí","edir","edit","edito","editor","editoriais","editorial","eduardobolsonaro","educada","edução","eeeeeeeeeeeeee","efeitos","efetiva","efetivamente","efetivo","efetuada","eficaz","egoísmo","egoísta","ególatras","egotrip","egrégio","eichmann","eixo","eldorado","elegante","elegantes","elegê","elegendo","elegerem","elegível","eleiçāo","eleitoralmente","elemento","elenca","eletivo","elétrica","eletrônica","eletrônicas","elevado","eleven","elevou","eliane","eliminação","eliminada","eliminadas","eliminar","eliminaram","elimine","elitista","elizabeth","elogiá","elogiado","elogioso","elun","email","embaixada","embalada","embalança","embarcarem","embate","emblemático","embrulha","embuste","emergência","emergencialmente","emfie","emissoras","emite","emocional","emocionante","emos","empacotado","empolga","empreendedores","empregam","empregou","empresadas","empresarios","empresta","emputecendo","emputeceu","enaldinho","encabeçam","encaminhado","encantador","encarada","encarando","encarar","encarnada","encerra","encerrar","encerre","enchergam","encheu","encho","encima","encobrir","encomende","encomendou","encontra","encontramos","encontrando","encontrará","encostado","encosto","encrenca","encubado","encurralar","encurtassem","endemoniados","endereço","endinheirados","endividado","endossamos","endossar","endosso","enéas","enéias","enérgico","energy","enfatize","enfermagem","enfiadas","enfiados","enfianorabo","enfiasse","enfiava","enfie","enfiltrado","enforcar","enfraquecido","enfrentada","enfrentado","enfrentamento","enfrentou","enfretado","engajar","enganador","enganam","enganando","engane","engano","engasgando","engavetar","engraçadas","engrandecer","engravida","enguete","enjaulados","enjôo","enlambuzados","enlouquecem","enlouquecido","enlutada","enojada","enojar","enqt","enquadramentos","enquetes","enredadas","enriqueceram","enriqueceu","enrustida","ensaiada","ensinado","ensinamentos","ensinaram","ensurdecedor","entenderia","entendimento","enterro","entes","entoada","entoando","entramos","entrará","entraram","entrarei","entrarem","entregaram","entreguei","entreguista","entreguistas","entrelaçado","entrem","entrevistada","entrevistando","entrevistas","envergar","envergonhado","envergonham","envergonho","enviados","enviare","enviaria","envie","envieda","enviou","envolva","envolveram","envolvida","envolvido","envolvo","enxerga","enxergando","enxovalha","eostrea","epoca","eqto","equação","equilibrado","equipar","eraldo","errados","errasse","erre","erroneamente","erundina","esbanja","esbanjador","esbravejam","escalação","escalão","escancarada","escânda","escandalizados","escandalizar","escandalosa","escandolo","escapamento","escapará","escapou","escargot","escarnecem","escarneceu","escatalógicas","esclarece","esclarecer","esclareceu","escolho","escondia","escondidamente","escondidinho","escondidos","escorregar","escovar","escravidão","escrevi","escrevo","escrita","escritos","escritura","escroque","escrota","escrotices","escrotidão","esculhamba","escuridão","escurinho","escusos","escutei","escuto","esfarrapadas","esfolam","esforço","esforços","esfregadas","esfriar","esfriaram","esgotamento","esmola","esmolas","esmuram","espaçadas","espaços","espantoso","esparramam","especialidade","especialização","específico","espectros","espelham","esperam","esperarmos","esperava","espere","esperma","esperto","espertos","espetáculo","espetacurlamente","espíritas","espiritual","espiritualmente","esplanada","esplêndido","espontânea","espontâneas","esporadicamente","esporte","esposo","espumar","esqjuerda","esquecem","esquecemos","esquecerá","esqueceremos","esquecida","esquecimento","esquedalha","esquenta","esquentando","esquentar","esquerdismo","esquerdomacho","esquerdopata","esquete","esquina","essência","establishment","estadio","estádio","estágio","estamoscombolsonaro","estampa","estampado","estampar","estando","estardalhaço","estarrecedor","estás","estatização","estatize","estatuto","esteje","estelionatário","estética","estevão","estimula","estimulava","estímulo","estimulou","estiveres","estocolmo","estômagos","estória","estourado","estradas","estragada","estragando","estragar","estragos","estrangulamento","estranha","estranheza","estranhos","estratégico","estrategista","estreitas","estressar","estribeiras","estribuchando","estrume","estrumes","estrutura","estudem","estudou","estultices","estultícia","estúpidos","esvaziamento","eswuerda","etiqueta","etiquetas","euforia","euhehueheuhe","europeia","europeus","evacua","evangelicalismo","evangélicas","evitarmos","evitáveis","evolucional","exacerbados","exagerado","exageraram","exaltada","exaltado","exaltados","excedente","excelência","excelentíssimo","excessiva","excluido","excluiria","exclusivamente","exclusividade","excrementissimo","excremento","execuções","executado","executivos","executou","exercendo","exibicionista","exibindo","exibiram","exigindo","exilam","exilou","exista","existam","existente","existindo","existiram","existisse","exitem","exorcizando","expectativas","experimento","expirou","explana","explanando","explicamos","explicará","explicasse","explicáveis","explicitando","explícito","exploda","explodam","explodir","explodirem","explodiu","expõe","expontaneidade","exportará","exporte","expostos","expresse","expressões","expulsa","expulsão","expulsar","expulso","expulsos","extermínio","extinguir","extraordinário","extrapolando","extremista","faalar","fábio","fabricação","fabricante","fabrício","fábula","fabulosas","faca","façamos","faceboot","faceiro","fáceis","faceta","fachini","facial","facilidade","facilitaram","facilite","facilitou","facilmente","facínora","faculdades","fadas","fafen","faísca","falação","falaciosas","falada","falasse","falassem","falavam","falcão","falcon","falem","falência","falhando","falharão","falhas","falhei","falhou","falindo","faliram","faltará","familicia","familícia","famílicia","familiciero","famosinhos","fanática","fanático","fanboy","fancam","fanfic","fantasma","fantasmas","farcs","farda","fardada","farmacêutica","farmacêutico","farsa","farsantes","fartaram","fascínio","fascistas","fatal","fátima","fator","faturada","faturado","faturava","fauna","faustao","fausto","favas","favoooooooor","favoorrrr","favorece","favores","favorita","favoritismo","fazê","fazendeiro","fazendeiros","fazndo","fder","fdps","fdpt","feat","fechadao","fecharam","federação","federados","fedida","feds","feias","feijão","feios","feitiche","feitoooooooooo","feixe","feladaputas","felizmente","feminejo","feminicidio","fenaj","feriados","ferido","feriu","fernandes","ferrados","ferradura","ferrar","ferratênis","ferraz","ferreira","ferris","ferro","ferrou","fertil","ferver","fervorosidade","festabbb","fétido","fflch","fiasco","fibra","ficabolsonaro","ficasse","fidelidade","fidelix","figurão","figuras","figurinha","figurinhas","filas","filé","filhodaputa","filhote","filiação","filiado","filiar","filmes","filosofando","filtra","fimose","finalizou","finalzinho","finanças","financeiros","financiadores","financiamentos","financiaram","fincar","finésse","fingem","fininho","finos","fins","fiquemos","firma","firmando","firmeza","firula","físicas","fisiológicos","fisiologismo","fisting","fita","fixa","fixado","fizerem","flácido","flar","flexibilização","flop","floresta","florestasemcortes","foca","fodão","fodassse","fodeu","fodido","fofa","fofoca","fofocas","fofoqueiro","fogos","folego","fôlego","folga","folhadesumpaulo","folloforfollo","fonoaudiólogo","fonseca","fontes","foquinha","forabolsonaroeseubandodecriminosos","forabolsonaroesuaquadrilha","forabolsonarogenicida","foraernestoaraujo","foralumena","foramaia","foramidialixo","forapazuello","forca","forçabolsonaro","forçado","forçar","forcem","forjadas","forjando","forjar","formada","formalizar","formalmente","formando","formiga","formiguinha","formo","formou","fornecedora","fornecedoras","fornecer","foro","fortalece","fortalecendo","fortalecer","fortalecido","fortão","fortinite","fotos","fraca","fracos","fracote","fraga","fragilizado","fragilizando","franca","francamente","francisca","francisco","francos","frango","franja","franqueados","fraqueza","fraquinha","frases","fratulência","fraudando","fraudes","fraudulentas","frear","frentes","frequentado","frequente","fresca","fresco","freudiano","frias","frigoríficos","fritado","fritar","fronha","front","fronte","frontes","frotanacamara","frouxa","frouxos","fruet","frustrações","frutas","frutinha","fuça","fuck","fudê","fudeeeuuu","fudendo","fudida","full","fumar","fuminar","fumo","funai","funça","funcional","funcionar","fundação","fundamental","fundamentalismo","fundir","furado","furaram","furarem","furico","furiosa","furiosas","furiosos","futilidade","futilidades","futricar","fuzilamento","gabiru","gadas","gadisse","gagliasso","galãs","galões","galp","game","gamers","gananciosas","ganham","ganharam","ganhe","ganhemos","gantz","garante","garantida","garantido","garantistas","garotão","garrafa","gastaram","gastaria","gaste","gastei","gata","gates","gatos","gaúchos","gaviões","gela","geléia","geleias","gelo","gêmea","generalizado","generalizar","genérica","genero","gêneros","gênesis","genocída","genocidio","genocídios","gentalha","genteeeeeeeeeee","gentesemcabimento","gentileza","gerada","gerado","geraldo","geraram","gerência","germânico","gesto","gestor","gestos","giannattazio","gigantesca","gigantesco","gigantescos","gilson","ginásios","girando","glauber","glicério","glicose","globalismo","glórias","glorifica","glorificou","glub","gnews","goiânia","goiano","golaço","gold","gorda","gordofóbico","gordos","gorvemo","gostarem","gostasse","gostosura","gostosuras","gosyar","gota","governa","governabilidade","governados","governantais","governarem","governista","governofederal","goytacazes","gozar","gracinha","grade","gramas","grandessíssimo","grato","grava","gravada","gravidez","gravou","greta","grevedoscaminhoneiros","gringo","gripe","gritarei","gritarem","gritavam","grito","grobinho","grossa","grosseria","grotesco","grotesquerie","guajajara","guardam","guardar","guernica","guerreiros","guerrilheiros","guga","gugagenocida","guguinha","guiados","guido","guloso","gurbanguly","gurus","gusttavo","haaa","habitava","hábitos","hacker","hackers","hadson","hahahaahahahaha","hahahahahaah","hahahahahahahahahahahahahahahahahahahahahahahahahahahahhaahah","hahahahahahahahahahahahhahahhahahahahahahhaha","hahahahahahahahahha","hahhahahaha","haitiano","harmonia","harmonicamente","harmonização","hashtags","hassan","hattem","hauahh","havana","havendo","haviam","hediondo","heinnn","hemorroida","hemorroidas","hermes","herzog","hetero","hétero","héteros","hibernando","hidratando","hidroxicloroquina","hienas","higiêne","hilária","hininha","hino","hipocrático","hipocresia","hipocrita","histérica","historia","historiador","histórica","holística","hollywood","hombridade","home","homenagem","homofóbica","homofobico","homófobo","homossexuais","homossexual","honestamente","honestíssimo","honestos","honrosas","horado","horrivel","horseman","hospitalar","humanitárias","humanizam","humildade","humilhação","humilhada","humilhados","humilhante","hummmmm","humorista","humorístico","hunter","hunty","huuum","iala","ibama","ibaneis","ibirapuera","ibope","iceberg","icon","icone","ideais","ideal","ideário","identifica","identificação","identificam","identificar","identificassem","ideológico","idiocracia","idiotice","idólatra","idolatram","idolatrando","idolatrava","idolatrou","ídolos","idoneidade","ignorados","ignorar","ignore","igualam","ihuuuuuuullllll","ilação","ilegais","ileso","iludam","iludido","iludidos","iluminado","ilumine","iluminismo","ilusão","ilustrativa","imaturidade","imbatível","imbecilidade","imbecis","imediata","imensos","imensurável","imersos","imita","imitado","imitando","imitar","imitavam","imobiliárias","impactam","impactar","ímpar","imparcialidade","impea","impeachmado","impeachmentbolsonaroja","impeachmente","impeachmnent","impeachtman","impeachtment","impeça","impecável","impedi","impedindo","imperdoável","imperial","imperiosa","impichá","impichimam","implacáveis","implantando","implementado","implementar","implicância","implode","implora","imploro","impopular","impossíveis","imprensacorrompida","imprensinha","impresa","impressiona","impressionado","impressionante","impresso","improdutivo","improvisar","imprudencia","imprudentes","impune","imputações","imundice","imundo","imunizante","imunizar","inacessível","inácio","inaptidão","inaugurar","inbox","incansávelmente","incapacidade","incapazes","incendiário","incensação","incerto","inciso","inclua","incluíram","incoerência","incoerente","incógnita","incomodado","incômodos","incompetentemente","incompetentes","incondicional","incondicionalmente","incrimine","incúria","indecência","indenizadas","indenizar","independentemente","independentes","indicada","indicar","indicativo","índice","indiciado","indiferentes","indígenas","indigente","indignado","indignar","índios","indiquem","indireta","indiretas","indispôs","índole","industrialização","induzir","ineficiência","ineficiente","ineficientes","inelegibilidade","inelegíveis","ines","inês","inevitavelmente","inexplicáveis","infantilidade","infartar","infarto","infectado","infectados","infelozmente","infere","ínfimas","infinita","influencer","influenciadora","influencidora","influenciou","informal","informativa","informe","informem","informo","infos","ingênuo","ingerir","ingrato","ingrediente","ingressarem","ingresso","inicia","inicial","iniciante","iniciasse","inimigas","iniqüidade","injusta","injustiça","injustificáveis","injusto","inlutadas","inocência","inocente","inocentes","inoperância","inova","insanos","insatisfeitas","inscrever","inscritos","insensatez","insentões","insinuando","insinuar","insiste","insistem","insistência","insistir","insistiremos","instaurar","instável","instigou","institucional","institui","instrumentalizar","insulta","insulto","insultou","insumo","insuperável","íntegra","integralmente","integrante","integridade","inteiramente","inteiras","intelectuais","intelectualmente","inteligentes","intencionados","intencionalmente","intendente","intender","intensiva","intensivos","interação","interagindo","interagiu","interceda","intercepta","interdição","interditá","interessei","interfere","interferindo","interferir","interfone","interlocutores","internado","internauta","interno","interpretação","interpretadas","interpretar","interpretaram","interrompeu","intervenção","intervencionista","intervenha","íntima","intimida","intimidade","intimidar","intimidarás","íntimos","intocado","intocados","intocável","intolerante","intolerável","intuito","inuteis","inútel","invade","invadir","invadiram","invencíveis","inventa","inventado","inventei","inverdades","inverno","invertida","inves","investidores","investiga","investigada","investigados","investigamos","investigaremos","investindo","inveterado","ipoctra","irada","iranildo","irás","iremos","irene","iríamos","irlanda","irmao","irmãs","irresponsabilidades","irresponsáveis","irrestrita","irretocável","irritação","irritando","irrito","isca","isentões","issoo","issoooooooooo","istoelixo","istoera","itália","itambé","itanhandu","itatiaia","ítens","ivermectina","jaircondensado","jaircondensadoatéjair","jaja","jana","janaina","jânio","janones","jantando","japonesa","jatada","jeff","jegue","jeitão","jeitinho","jeitos","jeto","jinping","jkkkkk","joanete","joenia","jogador","jogando","jogaram","jogue","joguei","john","johnson","jong","jorge","jorginho","jornalis","jornalist","jornalístico","jornazistinhas","judeus","judia","judiação","judiciais","judicialmente","judiciarios","jufs","jufss","juíza","juizinho","julga","julgamento","julgará","julgaram","julgo","julgou","julgueis","jumentada","jundiaí","junta","juntado","juntamente","juntas","junte","juntinhos","juramento","jurava","jurídica","jurou","justiceiro","justificado","juyeon","kageyama","kakajabshq","kartódromo","kingkong","kirido","kits","kjjhhjkkkhkk","kkakakakak","kkakakakakoakaka","kkkkkjkjjhjjmkk","kkkkkkkkjjjj","kkkkkkkkkkkk","kkkkkkkkkkkkkkk","kkkkkkkkkkkkkkkk","kkkkkkkkkkkkkkkkk","kkkkkkkkkkkkkkkkkkk","kkkkkkkkkkkkkkkkkkkk","kkkkkkkkkkkkkkkkkkkkkkkkkk","kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk","kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk","kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk","kkkkkkkkkkkkkkkkkkkkklkkkkkkkkk","kkkkkkkkkm","kkkkkkl","kkkkkrying","kķllllll","koleston","kong","krlh","labic","labirinto","laboratório","labs","lacrada","lacrando","láctea","ladinho","ladrãozinho","lagoa","lakkkk","lambedor","lambem","lambuzado","lambuzar","lambuzou","lamentam","lamentar","lamentavelmente","lançada","lançamento","lançar","lançaram","lanche","lançou","laranjal","lares","largar","largo","largueza","larica","lariquento","larte","lascar","lascaram","lascou","lasquem","latinhas","latrina","laurinha","lavabit","lavada","lavajatista","lavo","legaliza","legalizados","legislações","legítimas","legítmas","legume","legumes","leigos","leilão","leitada","leitadas","leitalão","leitecondensar","leito","leitor","lembramos","lencinho","lencos","lenda","lendário","lenha","lenta","leonel","lerem","lesão","lésbica","leso","lessa","lestásia","letal","letárgicas","letivo","letras","levante","levantei","levará","levei","levi","levianamente","lgbtifóbico","lgbtq","lgbtqia","lgbts","lhira","liberado","liberaliza","liberalizou","liberaram","liberpops","liberta","libertamos","libertando","libertem","libertou","licenciados","licitações","licitatório","licores","lidado","lidar","liderados","liderando","liderar","ligação","ligada","ligam","liguei","liguem","limitação","limitada","limitado","limitou","limpa","limpando","limpar","limpo","lindemann","lindoo","lindooo","lindooooo","linguarudo","linhagem","liquidar","liquidificador","list","listas","literatura","litorâneas","litro","litros","little","lives","livinho","lixoé","lixooooo","lobo","loby","loco","locomotiva","logan","logico","loide","lojas","lola","longa","longas","lorota","lotação","loteamento","louca","loucos","louis","louva","louvou","love","luana","lubrificante","lucena","lúcia","lucio","lucro","lucrou","lukashenko","luke","lulamereceumjulgamentojusto","luli","lulismo","lumema","lutei","luva","luxos","lxoé","lyra","mabel","macaco","macedo","machado","machão","macumba","macumbeiro","macunaíma","made","madoc","maestria","mafalda","máfia","mafioso","magalhães","maggie","mágico","magno","magoadinho","magoado","magro","maiacumplicedegenocídio","mail","maio","maioridade","maiúsculo","malagueta","malandragem","malas","maldivas","males","malha","malhar","malta","maluquinho","malvado","mamadeiras","mamador","mamadora","mamadores","mamãe","mamam","mamão","mamba","manada","manca","mancar","mancha","manchar","mand","mandá","mandada","mandam","mandante","mandaram","mandarem","mandaria","mandasse","mandatário","mandatos","mandava","mandeta","mandona","mandriões","maneiras","mango","manhãs","manhathan","manibus","manicômio","manifestamos","manifestaram","manifestou","manipulado","manipulam","manipular","manipulou","manobra","mansa","manso","mansos","mantega","mantêm","manteve","mantive","mantra","manus","maquiados","maracanaú","maranhão","marcadas","marcão","marcar","marcarem","marcas","marcel","marcelobrum","marcial","marcianos","marcio","marciolabre","marcius","marcopolo","maré","mares","marginais","marginalizada","marido","marielle","marilia","marine","marionetes","marqueteiro","marra","marrom","martelo","mascarar","masculinidade","massacrada","massacrados","massacrante","massacre","massas","massivas","matança","mataram","matasse","mate","matemática","materializando","matheus","matilha","matosinho","matrículas","maus","máximo","mazelas","mblivre","mebêlê","mecanismo","medalha","mede","mediante","medição","medicina","medindo","mediocridade","medrosos","megafaturou","meios","meirelles","meladinho","melado","melhem","melhorado","melhorando","melhoras","melhoria","melindre","memo","mencionar","mencionou","mendigar","meninas","menino","menotti","mensageiros","mensagem","mensais","mensal","menstruada","mentais","mentecaptos","mentirosos","meramente","mercedes","mercenária","mercenários","merdaaaaaaaaaaa","merdanaro","mereça","merecedor","merecemos","mereceram","mereceu","merecíamos","merengue","mergulhou","mérito","meritocracia","mermo","mesas","mesquinho","messenger","mestre","mete","meteram","metesse","metiam","metido","metidos","método","metralhando","meudeus","meudueud","mexer","mexeu","méxico","micão","micto","midia","midiáticas","midiático","midorima","mignon","migo","migrasse","mija","milagres","milcheque","milhoas","mili","milicianocomofuncionarias","milicos","milícos","milimetricamente","milita","militâncias","militarismo","militarização","militarmente","milmortos","mimado","mimizentos","mina","minar","minfra","minhacoréobrasil","mini","mínima","minimizando","minimizar","minimizou","minimo","minion","ministra","ministrou","minúscula","miria","mirian","mirim","miseráveis","miseravel","misericordioso","misógina","misógino","missão","misturar","misturo","mitar","mítico","miúda","mizera","mlks","mobiliza","moçolão","mocotó","moda","modalidades","modelam","moderniza","modos","modus","mofando","moisés","moita","molinho","molon","mommy","monarca","monetização","monge","mongoloide","monomandato","monstros","monstruosa","montadoras","montante","montar","monumental","monza","morais","moralzona","morango","mórbido","mordendo","mordomias","moreira","morram","morreira","mosca","mostram","mostrará","mostrava","mostrei","mostrem","mote","motivação","motoqueiro","motoristas","motors","motos","mount","mourao","moveu","movido","movimentação","movimentar","mrrss","msnbrasil","muambeiro","mucosa","mudado","mudanças","mudaram","mudasse","mudava","mudei","muído","muiiiiiiiiiito","multar","multas","múltiplos","mundi","mundiais","mundos","municipal","músicas","mussolini","mutreta","muuuuuito","muuuuuu","naaaadaaaa","nacionais","nacionalista","nações","naiana","naja","namorada","namoro","nãoooo","naoooooooo","naososmsnsiwpkwnddioww","naquelas","naqueles","naquilo","narcos","narra","narraram","nasceram","nasceu","nasci","nascida","natal","nathália","nativas","nato","natural","naturalizando","naturalmente","natuza","naufragar","náuseas","navega","nayara","nazismo","necessários","necessidades","necessita","necessitamos","necrológio","negação","negacionistas","negam","negativamente","negativas","negativo","negativos","negligenciaram","negligente","negociação","negociações","negocio","negociou","negodi","neoliberais","neonazismo","neopentecas","neopentecostais","neopetismo","neozistaliberal","nepotista","nervosinho","nestas","netos","nêumanne","neurônio","neurônios","neutro","newman","newsletter","newton","nexo","nhono","nicho","nico","nicotina","nina","ninguémficapratrás","nisto","niterói","nítida","nitidamente","nivelar","nmrl","noah","noarnacbn","nocaute","nocivo","nóia","nojeira","nojentas","nojentos","nomeação","nomeados","nops","nordestinas","noricias","normalização","normalizando","normalizar","normalizou","normas","noronha","noruega","nosnultimos","notar","notaram","note","noticia","noticiam","noticiário","noticiários","noticias","notificações","notinha","notória","noutros","nove","novela","novembro","nsfw","nulo","numerologia","nuremberg","obcecado","obcecados","obedecer","obedecerão","obedecesse","objetos","obrigou","obscenos","obscura","observação","observe","obstetrícia","obstrução","obténdo","obtidas","obviamente","óbvias","ocasião","oceania","oceano","ocidente","ócio","ocorrência","ocorrer","ocorreria","ocorrida","octógono","óculos","ocupações","ocupados","oderbreach","odia","odiá","odiada","odiado","odiados","odiamos","odiluvio","oeste","ofélia","ofendem","ofender","ofendida","ofendidinha","ofendidinho","ofendidinhos","ofensivo","oferece","oferecendo","oferecessem","ofereceu","oferecido","oferecidos","office","oficialmente","ogros","oitavo","oitenta","ojeriza","olavodecarvalho","olhada","olhem","olhemos","oligarquia","oliveira","omisso","omissões","onça","ônibus","onipotente","onix","online","onyx","onze","oooone","operações","operador","operandi","opondo","oportunismo","oppa","opresidente","opressão","opressores","opta","optam","oque","oração","orações","orado","orando","oraram","orçamentários","ordenamento","ordenou","ordinários","orelha","orelhas","orgânica","organizados","organizam","organizando","organizar","órgão","orgulhoso","orientá","orientações","original","ornar","ortiz","orto","ostentar","ostracismo","osvaldo","otario","ótica","ótimas","ouço","ouriçadinho","ouro","ousado","ousei","outrora","outubro","ouvindo","ouvisse","ouvíssemos","ouviu","ovacionando","oxygênio","ozônio","pablito","pablo","paciente","pacientes","pacificamente","paçoquinhas","padece","padesse","padraozinha","padrasto","padrinho","pagador","pagamento","pagaria","pagas","pagava","páginas","pagode","pagodeiro","pague","paguei","painel","paint","paìs","paises","paizao","paladar","palco","palestra","palestrar","palestras","palha","palhaços","palmas","palmeirense","palmos","palpite","pampulha","panaca","pancada","pancher","panelaco","pangaré","pantanal","papa","papagaio","papelao","papelão","papelarias","papinho","paputqpariu","pára","parabém","parabenizar","parabens","paradas","parafuso","parágrafo","paralisação","paralisada","paralisado","param","parâmetro","paranaguá","paraquedista","pararem","parasitar","parasitas","parceiro","parceria","parcerias","parecerem","pareceu","parecia","parecida","parede","paredes","parentes","pari","parir","parou","parque","parquinho","partem","participa","participamos","participativo","participou","particular","particulares","particularidade","particularmente","partidário","pasaando","páscoa","passagem","passarão","passarinho","passas","passiva","passividade","pastar","pastas","pastorzinho","patamar","pateta","patota","patriaamadabrasil","patrícia","patrocina","patrocinou","paula","paulada","paulino","paulistascontradoria","paulistastêm","pauno","pautada","pautar","pautou","pauzinho","pavimentou","pazuelo","pazzuello","pazzuelo","peaky","pearl","pecado","peculato","peculiar","pedalada","pedeao","pediam","pediria","pedisse","pedofiilia","pedrada","peeeem","peesidente","pegá","pegamos","pegando","pegas","pego","peidado","peidou","peitar","pelado","pele","peludas","penalização","pence","pensado","pensou","peppa","pequenos","perae","percam","percurso","perdedores","perderão","perderemos","perderia","perdidas","perdido","perdoado","perdurar","perece","perfeeeeito","perfeição","perfeita","pérfido","perguntam","perguntasincera","pergunto","perguntou","periferia","periga","perigosa","perigoso","perigosos","permanecem","permanecer","permanentes","permissão","permitam","permite","permitia","permitiram","peroba","perola","pérolas","perpetua","perplexo","perpretrados","persegue","perseguem","perseguição","perseguições","perseguido","perseguir","persona","personalidade","personalidades","personificada","perspectiva","perspectivas","perspicaz","pertencer","pertinência","peruca","pesquisada","pesquisador","pesquisando","pesquisar","pesquisaram","péssimos","peste","peter","petralha","petri","petrone","piadinha","picadeiro","picadilly","picanha","picareta","picolés","piedade","pika","pilantragem","pilha","pindaré","ping","pinga","pino","pinochet","pintar","piora","piore","piovanni","pipoca","pipoqueiro","pira","piranha","piraquara","pirocas","pisamos","pisante","piscina","pista","pistola","pitada","pitchuquinho","piti","pizzas","placa","plácido","plana","planejada","planejando","planejar","planejou","planeta","planilhas","plantada","plantão","plateia","play","please","plenamente","pleno","plesa","pmdbistas","pocah","pocolla","pôde","polidez","polido","polidos","politicadiscutesim","politicas","polito","polonês","polônia","pólvora","ponderada","pong","ponha","ponho","pontual","pontuar","poota","populismo","populista","populistas","porão","porcamente","porcas","porchat","porisso","porn","porraaaaaaaaa","porre","portaldatransparencia","portalig","porte","porteiro","porto","portovelho","portuga","posiciona","posicionamentos","posicionem","posições","positivos","poso","possam","possibilidades","possuí","postado","postam","poste","pouca","poucas","pouha","pouquinho","pourraaa","pousa","pousam","povao","povos","poxaaa","pqpqpqpqp","praça","prado","pragmático","praticais","praticando","praticar","práticas","praticos","prazos","precarizado","precionada","preciosos","precisamente","precisará","precisavam","predileção","preferência","preferido","preferindo","preferiram","prefira","pregada","pregam","pregas","prego","pregou","preguiçadobbb","preidente","prejudicam","prejudicando","prejuizo","prematuros","premedita","premiados","premonitório","prenda","prendendo","preocupa","preocupações","preocupante","preocupantes","preparadas","preparamos","preparando","preparemo","prerrogativa","presas","presbiteriana","presbiterianos","presente","preservando","preservativo","presid","presidencia","presidenciais","presidências","presidenciável","presidentezinho","presídio","presido","pressas","pressionando","pressione","prestação","prestam","prestava","prestem","prestigiados","prestigiando","prestigiaram","prestígio","presto","prestobarba","pretendem","pretendia","pretensão","pretexto","pretextos","preto","prevalece","prevalecer","prevaricação","prevejo","prevenção","previne","previram","previsão","previsibilidade","previstos","preza","prima","primárias","primeiras","primo","printizinhos","prioli","prioritária","priorizar","priorizou","prisões","privada","privilegiada","privilegiadas","privilegiar","probabilidade","problemática","probo","procedimento","processado","procura","procurador","procuradoria","procurei","procurem","procuro","produtiva","produzidas","produzir","prof","profere","proferida","proferidas","proferindo","proferiram","profeta","profunda","programadores","progredindo","progressistas","proibidão","proibidos","proibiu","projaquistão","projeção","projeta","prole","proletários","promete","promissor","promove","promovendo","promovia","promovidas","pronome","pronta","pronunciam","pronunciamentos","pronunciar","pronunciem","pronuncimento","propaga","propagadora","propina","propõe","propor","propósito","propriá","propriedade","propriedades","prorrogação","prorrogar","prós","prospera","prosperar","prostíbulo","prostrou","protagonismo","protagonizado","protecção","protege","protestam","protestando","protestarem","protestava","protocolados","protocolaremos","protótipo","prove","proveito","providencia","providenciar","providências","provisória","provoca","provocaram","provou","psicologia","psicológica","psicológico","psicológicos","psicólogo","psicopolítica","psicótico","publi","publicação","publicada","publicado","publicados","publicam","publicizar","pufavô","pula","pularam","pulem","pulou","púlpito","punhado","punhos","punidos","pure","pussy","putaqueopariu","putaquepariu","putasso","putinho","pútrida","puxar","qndo","qquer","qtos","quabdo","quadrada","quaisquer","qualificação","quarenta","queimadas","queimado","queimar","queiram","queloveskz","quemdefendevoceeopt","quente","quererem","queres","queridinho","queridos","quesito","questao","questionados","questionamentos","questionando","questione","quietos","quilan","quilombolas","quinhentos","quiserem","rabada","rabinho","rabodaratazana","racha","rachadão","rachando","racional","racionália","radialista","radical","radio","rádio","rafa","raivinha","ralo","ramo","rampa","ranso","rapa","rapaziada","rappi","raramente","rasga","rasgada","rasgado","rasgar","rasgou","raspando","rasteira","rastreamento","ratazanas","rated","ratoeira","raxação","razoabilidade","razões","reações","reafirma","reafirmar","reagan","reagem","reagir","reagiram","reagiu","reaja","reajam","realiza","realização","realizada","realizadas","realizado","realizem","realizou","reallity","really","reaproximar","rebaixar","rebatem","rebateu","rebelando","rebolar","recebemos","receberá","receberam","receberia","recebessem","recebeu","recebida","recebido","receitou","recentes","rechaça","recheadas","recinto","recíproca","reclamação","reclamaram","reclamavam","reclame","reclamem","reclamou","recomendação","recomendações","recomendando","recomendava","recomendo","reconheceu","recordes","recorre","recua","recuam","recuo","recuperando","recupere","recusa","redação","redimido","redutos","reduzindo","reeditou","reelegendo","reelegi","reeleja","reembolso","refeições","reféns","refere","referem","referia","referido","reformado","reformista","refrão","refri","refrigerantes","refúgio","refuta","refutado","regaço","regaçou","regada","regalias","regiões","registrar","registraram","registrava","registros","registrou","regou","regrando","regredindo","régua","reguladoras","regular","regularidade","regurgitados","regurgitou","reinando","reincidências","reiniciei","reino","reinventar","reiterou","reivindicação","relacionados","relacionas","relatada","relativize","relatou","relaxa","relembre","relembrou","réles","relevância","relevante","religiões","religioso","religões","relincha","relinchando","relincho","relógio","remedio","remete","renata","rende","render","renegou","renova","renovo","renuncia","renunciar","renúncias","repassando","repassar","repensadas","repense","repercutiu","repetem","repetia","repetida","repetindo","repetiu","repleta","replica","réplica","replicadores","replys","reporter","repórteres","reposicionem","repostou","represente","reprovação","republica","repudiado","repugnante","repulsa","repusilvo","requerimento","requião","requisito","resenha","resert","reservadas","resignificar","resistencia","resistiu","respeitava","respeite","respeitou","respira","respiradores","respirar","respondendo","responderia","respondia","respondida","responsabilizado","ressalta","ressalto","ressalvas","ressentido","ressurgiu","restabelecimento","restante","restantes","restaurantes","restava","restinho","restos","restrição","restritivas","resultará","resultaria","reta","retais","retaliatório","retaliava","retire","retomar","retorica","retorna","retratação","retrocessos","retrógrado","retuitar","reuniões","reunir","reuters","revanchistas","revelada","revelados","revelam","revelasse","revendo","rever","reverberar","reverenciando","revés","revida","revisada","revistas","reviver","revogado","revolução","revólver","ribamar","ricmais","ricos","ridiculaeriza","ridiculariza","ridicularizados","ridicularizando","ridicularizavam","ridiculo","riem","rifa","rights","rigorosidade","ripygona","riria","risadinha","riscar","ritmo","rivaldo","roche","rodadas","rodeado","rodeio","rodou","rodrigomaia","roger","rohani","rojão","rolê","romance","romancista","romero","rompido","rompidos","ronda","rondônia","rondonienses","rone","rosa","rosário","rosca","rosto","rostos","rótulou","roubadas","roubado","roubaram","roubariam","roxo","rpesidente","rsss","rude","rudeza","ruela","rugosinho","ruína","rumina","ruminante","ruminantes","ruralistas","saap","sábado","saberia","sabiá","sabotagens","sabrina","sabujo","sacanagem","sacrifique","sádicos","safadezas","safar","safe","saias","saibam","saichamando","saímos","saírem","sairemos","salão","salários","salas","saldo","salgar","salienta","salientar","salles","salões","salvação","salvem","samba","same","samuel","sancionar","sandices","sangrou","sanguinário","sanha","sanitária","santidade","santista","santos","sapatênis","sapatos","saquear","saqueda","saraiva","sarneando","sars","sarubo","satanas","satanás","satanista","satisfações","saudável","saudou","script","search","secado","secomvc","secon","secreta","secretária","secretário","secretários","secretou","sefuderkkkkkk","segredos","segui","seguimos","seguiram","seguram","segurar","seguro","seguuu","seleção","seleta","seletividade","selo","seloko","selos","selva","semblante","semeado","semelhante","semi","semicondutores","senadora","senao","senhores","senhorinha","senil","sensacionais","sensacional","sensatez","sensato","sensores","senta","sentado","sentam","sentença","sentidos","sentimentos","sentiram","sentissem","separadamente","separarem","sepultamento","sequência","sequestrado","sérgio","sergipana","sergipedizforabozo","séria","seringas","sérios","sermões","sertanojo","serto","serviçal","serviçopúblico","servidor","servidores","servir","sesc","setornaram","sexualidade","shipper","shoá","shok","shory","showzinho","sifudeee","sigla","significado","significar","silasmalafaia","silenciado","silenciam","silencio","silveira","similar","simm","simpatia","simpatizar","simprao","simsim","sina","sinaliza","sinalizando","sinalizava","sinceras","sinceros","sindicalistas","sinistro","sinistros","sinper","sinta","sintonia","sintonizando","sirene","sirkis","sistemática","sistematicas","sitc","sitou","situações","skate","skin","sksksksksksksk","sniper","soares","soberana","soberania","soberano","soberanos","soberba","soberbas","sobraria","sobras","sobremesas","sobrepõe","sobrepõem","sobrevivem","sobrevivendo","sobreviveram","sobreviveu","socada","socar","sócia","socialismo","socialista","socialização","socialmente","sociopatia","sócios","socorra","socorrer","socorridos","soerguimento","sofá","sofisticados","sofisticou","sofra","sofre","sofreram","sofrido","sofriimento","solicita","solicitação","solicitando","solo","soltaram","solteira","solteiras","solto","soluções","solvente","somam","sonegados","soneto","sonhando","sonhos","sonic","sons","sonsos","sony","soon","sopu","soraya","soro","sorriem","sorriso","sorrizinho","sorvetes","soucristaosoucontrabolsonara","soufinessoupt","spoiler","sportlight","spreader","sputnik","stalkear","stannnnn","stayin","stfvergonhanacional","stigmas","stonks","stopbolsonaro","stories","storys","suado","suavão","suavizar","suba","subalterno","subam","subestime","subjugam","subliminarmente","submeter","submissa","subornar","subprocurador","subserviente","subsolo","substituir","subtrair","subverteu","sucessão","sucessivos","sudeste","sufocada","suga","sugeria","sugerindo","suggar","suiça","suicida","suicidio","suicídio","suisse","sujeitam","sujem","sumariamente","sumido","sumiram","sumo","supera","superação","superado","superaram","superdimensionado","superdimensionamento","superem","superfaturada","superfaturadas","superfaturar","supérfluas","supérfluo","supersalários","suplica","suportamos","suportaremos","suporto","suposta","supostamente","supostas","supra","suprema","surgida","surgir","surpreendem","surpreendendo","surpreendente","surra","surskity","surtam","surtiu","surto","surtou","suruba","surubão","sururus","suspeitíssimo","suspender","suspendeu","suspensa","suspenso","sustentabilidade","sustentado","sustentar","sustentavam","sustento","suzano","tabu","taca","taça","tacada","tadeu","tadinha","taiobeiras","taleban","talento","talheres","talíria","talkei","tamancas","tamancos","tambom","tampa","tamu","tancredo","tanga","tanks","tanso","taoquei","tapado","taparam","tapetão","tapete","tarados","tarda","tardes","tarefa","tartaruga","tatuagem","tatuar","tatuo","tavam","taxa","tchan","tdah","tdos","teatro","técnicas","tecnologia","teco","telejornais","televangelista","temem","temendo","temia","temor","tempera","tempinho","temporárias","tendenciosa","tendenciosas","tendi","tenente","teno","tentamos","tentará","tentarão","tentasse","tentava","teólogos","teoria","teorias","terapeuta","terás","terça","terceira","terceirizar","terceiro","terceiros","tercerizar","tereza","termina","terminando","terminará","terminei","termo","terraplanismo","terraplanista","terras","terreiro","terríveis","terrivelmente","tesao","tesouro","testar","testemunhou","testes","tetemos","tetinha","tetra","texo","tezza","think","thomas","threeeeee","thumb","thump","tiago","tico","tigela","tijuca","tiltando","tímido","timing","típica","típico","tipificados","tirano","tiros","tirw","tito","tler","toalha","tocam","tocou","togados","toledo","tolera","toleram","tolhido","tomada","tomadas","tomaram","tomarão","tomaremos","tombamento","tombo","tona","tonto","tópico","toque","toquem","torcedor","torcendo","torceria","torceu","torci","torcia","tornam","tornando","tornaram","tornarem","torne","tornem","torresmo","torto","torturada","torturadas","torturadores","torturando","torturar","toscas","tosqueira","totalitários","tour","tóxico","trabalhadora","trabalharem","trabalhasse","trabalhavam","trabalhista","trabalyo","traçar","traços","trade","tradicionais","tradições","tradução","traga","tragédiaq","tragédias","trair","traíra","tramam","tramita","trâmites","tramóias","trampasse","trancamento","tranqueiras","tranquila","tranquilizar","tranquilos","transa","transações","transaria","transfere","transferindo","transfigurando","transfobia","transfobicos","trânsito","transmite","transmitir","transportar","transporte","transportes","transtorno","transvestidos","trapaça","traquejo","trará","traseiro","trash","tratada","tratados","tratam","tratando","trate","trato","tratou","traumas","travado","trave","travesseiro","travestido","travou","trem","treme","tremenda","tretaaaaa","tríade","tribuna","tributando","tributo","triggered","trilhando","tripé","tripudiando","trocado","trocam","trocando","trocaram","trocariamos","trocas","trogloditas","tróia","trololo","tronco","tropa","tropeçar","trouxas","trouxeram","trucidado","trumpkkkkkkkkkkk","truques","truta","tuca","tucana","tudoh","tumblrites","tumulto","túnel","tupi","tupiniquim","turismo","turística","turquia","tutinha","twit","twooooo","uajsuajksmwosmsksksk","ubica","ufpr","uiiiiiiiiii","ultimamente","ultimo","ultraliberal","ultrapassa","ultrapassados","ultrapassaram","ultraprocessado","umbigo","unção","únicas","únicos","unido","uniram","uníssomo","united","universitários","unzinho","upgrade","urgentemente","urologia","urubu","usarão","utilidade","utilizada","utilizam","utilizando","utilizar","utted","uzumaki","vacas","vacilando","vacilo","vacinada","vacinadas","vacinaja","vacinando","vacinaparatodosjá","vacinaram","vadia","vagabund","vagabundagem","vaicairporlatadeleitecondensado","vaivalandro","vala","valdomiro","valem","valendo","valeram","valia","validação","válido","válidos","valoriza","valoroso","valorosos","vangloriar","vantajoso","vapapu","vaparaputaquepariu","vapor","vara","varão","varejo","varella","varões","vasco","vasconcelos","vaselina","vaso","vassalo","vazado","vazando","vcnao","vegana","veia","véio","velada","velhas","velhos","velocidade","vemprarua","vencendo","vencerá","venceram","vencesse","vencido","vende","vendê","vendedora","vendia","vendida","vendilhões","venenosa","veneram","veneziana","venha","venia","verá","verbo","verde","verdinha","verduras","verem","vergonhagospel","vergonhosamente","vergonhosos","verificada","verificado","verificadoras","verificar","verinha","vertical","vésperas","vestido","vestir","vetou","viabilizam","viabilizou","viagando","viagem","viagens","viajando","vibes","vibrando","vibrou","viciado","viciante","vício","vicioso","viçosa","videntes","videos","vigarices","vigarista","vigaristas","vigia","viihtube","vilão","villa","villas","vincent","vinculados","vincular","vínculo","vingança","vingar","vinicius","violação","violações","virada","viraliza","viralizado","virasse","virem","virgens","viro","virtual","virtualmente","visão","viseira","visibilidade","visita","visitou","visível","vislumbrar","vislumbre","vistas","vital","vitalícia","vitamina","viteeras","vitiminha","vitoria","vivem","vivia","viviam","vixiii","vizinha","vizinhança","vizinho","vizinhos","vntc","voam","voltado","voltados","voltando","voltaram","voltaria","voltava","voltei","volto","vomitam","vontades","vôos","voou","votaremos","votariam","votarmos","votosecretonao","vsfd","vuitton","waaaack","waldir","wall","wanming","wapichana","what","white","wiliam","william","willow","willy","winx","wonka","worship","wyla","xenofóbico","xenófobo","xeque","xerém","xeretando","xingado","xingaram","xingasse","xornadas","yang","ygone","ygonna","yoki","zacarias","zelador","zelo","zeneca","zerar","zereiramente","zinco","zoando","zoeira","zomba","zombador","zombando","zombaria","zombou","zona","zoom","zuada","zuar","zueira"],"freq":[5090,801,731,543,543,406,378,359,326,244,242,239,205,180,176,175,168,164,164,160,160,158,156,156,154,152,151,149,133,132,126,121,117,116,116,114,110,108,108,107,107,106,105,100,98,97,96,94,94,92,92,92,90,89,89,89,88,87,86,86,86,85,85,84,83,83,82,82,79,78,78,75,75,73,73,73,73,72,72,71,71,71,70,70,70,68,68,68,67,67,65,65,64,63,63,63,63,62,62,62,61,61,60,60,59,59,58,58,58,58,58,58,58,57,57,57,57,56,56,56,55,55,54,54,54,53,53,53,53,53,52,52,52,52,52,51,51,51,51,50,50,50,50,50,50,50,49,49,49,49,49,48,48,48,48,48,48,48,48,47,47,47,47,47,47,46,46,46,46,46,46,45,45,45,45,44,44,44,44,43,43,43,43,43,43,43,42,42,42,41,41,41,41,40,40,40,40,40,40,40,39,39,39,38,38,38,38,38,38,38,37,37,37,37,37,37,36,36,36,36,36,36,35,35,35,35,35,34,34,34,34,34,34,33,33,33,33,33,33,33,33,33,32,32,32,32,32,32,32,32,32,32,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,30,30,30,30,30,30,30,30,30,30,30,30,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"fontFamily":"Segoe UI","fontWeight":"bold","color":"random-dark","minSize":1,"weightFactor":0.106090373280943,"backgroundColor":"white","gridSize":0,"minRotation":-0.785398163397448,"maxRotation":0.785398163397448,"shuffle":true,"rotateRatio":0.4,"shape":"circle","ellipticity":0.65,"figBase64":null,"hover":null},"evals":[],"jsHooks":{"render":[{"code":"function(el,x){\n                        console.log(123);\n                        if(!iii){\n                          window.location.reload();\n                          iii = False;\n\n                        }\n  }","data":null}]}}</script>
<script type="application/htmlwidget-sizing" data-for="htmlwidget-8d469893cdeb3fe82a03">{"viewer":{"width":450,"height":350,"padding":0,"fill":true},"browser":{"width":960,"height":500,"padding":0,"fill":true}}</script>
</body>
</html>
